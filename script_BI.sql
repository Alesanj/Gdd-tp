USE GD1C2023
GO

-- CREACION DEL SCHEMA --

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'BI_MODEL')
EXEC('CREATE SCHEMA BI_MODEL');


-- LIMPIAR CACHE --
IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'limpiar_cache')
DROP PROCEDURE limpiar_cache
GO
CREATE PROCEDURE limpiar_cache
AS
BEGIN
DBCC FREEPROCCACHE WITH NO_INFOMSGS
DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS
END
GO

-- ELIMINACION PREVENTIVA


IF OBJECT_ID('BI_MODEL.ESTADO_RECLAMO', 'U') IS NOT NULL DROP TABLE BI_MODEL.ESTADO_RECLAMO
IF OBJECT_ID('BI_MODEL.MENSAJERIA_ESTADO', 'U') IS NOT NULL DROP TABLE BI_MODEL.MENSAJERIA_ESTADO
IF OBJECT_ID('BI_MODEL.PEDIDO_ESTADO', 'U') IS NOT NULL DROP TABLE BI_MODEL.PEDIDO_ESTADO
IF OBJECT_ID('BI_MODEL.TIPO_PAQUETE', 'U') IS NOT NULL DROP TABLE BI_MODEL.TIPO_PAQUETE
IF OBJECT_ID('BI_MODEL.TIPO_MOVILIDAD', 'U') IS NOT NULL DROP TABLE BI_MODEL.TIPO_MOVILIDAD
IF OBJECT_ID('BI_MODEL.TIPO_LOCAL', 'U') IS NOT NULL DROP TABLE BI_MODEL.TIPO_LOCAL
IF OBJECT_ID('BI_MODEL.CATEGORIA', 'U') IS NOT NULL DROP TABLE BI_MODEL.CATEGORIA
IF OBJECT_ID('BI_MODEL.LOCAL', 'U') IS NOT NULL DROP TABLE BI_MODEL.LOCAL
IF OBJECT_ID('BI_MODEL.TIPO_MEDIO_PAGO', 'U') IS NOT NULL DROP TABLE BI_MODEL.TIPO_MEDIO_PAGO
IF OBJECT_ID('BI_MODEL.RANGO_ETARIO', 'U') IS NOT NULL DROP TABLE BI_MODEL.RANGO_ETARIO
IF OBJECT_ID('BI_MODEL.LOCALIDAD', 'U') IS NOT NULL DROP TABLE BI_MODEL.LOCALIDAD
IF OBJECT_ID('BI_MODEL.PROVINCIA', 'U') IS NOT NULL DROP TABLE BI_MODEL.PROVINCIA
IF OBJECT_ID('BI_MODEL.RANGO_HORARIO', 'U') IS NOT NULL DROP TABLE BI_MODEL.RANGO_HORARIO
IF OBJECT_ID('BI_MODEL.DIA', 'U') IS NOT NULL DROP TABLE BI_MODEL.DIA
IF OBJECT_ID('BI_MODEL.TIEMPO', 'U') IS NOT NULL DROP TABLE BI_MODEL.TIEMPO


-- CREACION TABLAS - DIMENSIONES --
CREATE TABLE BI_MODEL.TIEMPO(
	FECHA datetime PRIMARY KEY,
	ANIO int,
	MES int,
);

CREATE TABLE BI_MODEL.DIA(
	DIA_NRO int PRIMARY KEY,
	DIA nvarchar(50)
);

CREATE TABLE BI_MODEL.RANGO_HORARIO(
	RANGO_HORARIO_NRO int IDENTITY PRIMARY KEY,
	RANGO_HORARIO_INICIO decimal(18, 0),
	RANGO_HORARIO_FIN decimal(18, 0)
);

CREATE TABLE BI_MODEL.PROVINCIA(
	PROVINCIA_NRO int PRIMARY KEY,
	PROVINCIA_NOMBRE nvarchar(255) NOT NULL UNIQUE
);


CREATE TABLE BI_MODEL.LOCALIDAD(
	LOCALIDAD_NRO int PRIMARY KEY,
	LOCALIDAD_PRIVINCIA_NRO int REFERENCES BI_MODEL.PROVINCIA,
	LOCALIDAD_NOMBRE nvarchar(255) NOT NULL,
);

CREATE TABLE BI_MODEL.RANGO_ETARIO(
	RANGO_ETARIO_NRO int IDENTITY PRIMARY KEY,
	RANGO_ETARIO nvarchar(20)
);

CREATE TABLE BI_MODEL.TIPO_MEDIO_PAGO(
	TIPO_MEDIO_PAGO_NRO int PRIMARY KEY,
	TIPO_MEDIO_PAGO nvarchar(50)
);

CREATE TABLE BI_MODEL.LOCAL(
	LOCAL_NRO int PRIMARY KEY,
	LOCAL_NOMBRE nvarchar(100)
);

CREATE TABLE BI_MODEL.CATEGORIA(
	CATEGORIA_NRO int PRIMARY KEY,
	CATEGORIA_NOMBRE nvarchar(50) NOT NULL UNIQUE,
);

CREATE TABLE BI_MODEL.TIPO_LOCAL(
	TIPO_LOCAL_NRO int PRIMARY KEY,
	TIPO_LOCAL_CATEGORIA_NRO int REFERENCES BI_MODEL.CATEGORIA NULL,
	TIPO_LOCAL_NOMBRE nvarchar(50) NOT NULL UNIQUE
);

CREATE TABLE BI_MODEL.TIPO_MOVILIDAD(
	TIPO_MOVILIDAD_NRO int PRIMARY KEY,
	TIPO_MOVILIDAD nvarchar(50) UNIQUE NOT NULL
);

	CREATE TABLE BI_MODEL.TIPO_PAQUETE(
	TIPO_PAQUETE_NRO int PRIMARY KEY,
	TIPO_PAQUETE_NOMBRE  nvarchar(50) NOT NULL UNIQUE,     
);

CREATE TABLE BI_MODEL.PEDIDO_ESTADO(
	PEDIDO_ESTADO_NRO int PRIMARY KEY,
	PEDIDO_ESTADO nvarchar(50) NOT NULL UNIQUE
);

CREATE TABLE BI_MODEL.MENSAJERIA_ESTADO(
	MENSAJERIA_ESTADO_NRO int PRIMARY KEY,
	ENVIO_MENSAJERIA_ESTADO nvarchar(50) NOT NULL UNIQUE,
);

CREATE TABLE BI_MODEL.ESTADO_RECLAMO(
	ESTADO_RECLAMO_NRO int PRIMARY KEY,
	ESTADO_RECLAMO_NOMBRE NVARCHAR(50) NOT NULL UNIQUE,
);


IF OBJECT_ID('MIGRAR_TIEMPO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_TIEMPO;
GO
CREATE PROCEDURE MIGRAR_TIEMPO
AS
	BEGIN
		INSERT INTO BI_MODEL.TIEMPO(FECHA,ANIO,MES)
		SELECT * FROM(
			SELECT DISTINCT FORMAT(PEDIDO_ENVIO_FECHA, 'yyyy-MM') AS FECHA, 
							YEAR(PEDIDO_ENVIO_FECHA) AS ANIO, 
							MONTH(PEDIDO_ENVIO_FECHA) AS MES
			FROM NEW_MODEL.PEDIDO_ENVIO 
			UNION
			SELECT DISTINCT FORMAT(ENVIO_MENSAJERIA_FECHA, 'yyyy-MM') AS FECHA, 
							YEAR(ENVIO_MENSAJERIA_FECHA) AS ANIO, 
							MONTH(ENVIO_MENSAJERIA_FECHA) AS MES
			FROM NEW_MODEL.ENVIO_MENSAJERIA
			) A ORDER BY 1 DESC
	END
GO

IF OBJECT_ID('MIGRAR_DIA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_DIA;
GO
CREATE PROCEDURE MIGRAR_DIA
AS
	BEGIN
		INSERT INTO BI_MODEL.DIA(DIA_NRO,DIA)
			SELECT DISTINCT DIA_NRO,DIA_NOMBRE
			FROM NEW_MODEL.DIA 

	END
GO

IF OBJECT_ID('MIGRAR_RANGO_HORARIO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_RANGO_HORARIO;
GO
CREATE PROCEDURE MIGRAR_RANGO_HORARIO
AS
	BEGIN
		
		DECLARE @horaInicio decimal(18, 0) = '8';
		DECLARE @horaFin decimal(18, 0) = '24';
		DECLARE @horaActual decimal(18, 0) = @horaInicio;

		WHILE @horaActual < @horaFin
		BEGIN
			INSERT INTO BI_MODEL.RANGO_HORARIO(RANGO_HORARIO_INICIO,RANGO_HORARIO_FIN) VALUES (@horaActual,@horaActual+2);
			SET @horaActual = @horaActual + 2;

		END
	END
GO

IF OBJECT_ID('MIGRAR_PROVINCIA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PROVINCIA;
GO
CREATE PROCEDURE MIGRAR_PROVINCIA
AS
	BEGIN
		INSERT INTO BI_MODEL.PROVINCIA(PROVINCIA_NRO,PROVINCIA_NOMBRE)
			SELECT PROVINCIA_NRO,PROVINCIA_NOMBRE
			FROM NEW_MODEL.PROVINCIA 

	END
GO

IF OBJECT_ID('MIGRAR_LOCALIDAD', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_LOCALIDAD;
GO
CREATE PROCEDURE MIGRAR_LOCALIDAD
AS
	BEGIN
		INSERT INTO BI_MODEL.LOCALIDAD(LOCALIDAD_NRO,LOCALIDAD_PRIVINCIA_NRO,LOCALIDAD_NOMBRE)
			SELECT 	LOCALIDAD_NRO ,
					LOCALIDAD_PRIVINCIA_NRO,
					LOCALIDAD_NOMBRE
			FROM NEW_MODEL.LOCALIDAD 

	END
GO

IF OBJECT_ID('MIGRAR_RANGO_ETARIO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_RANGO_ETARIO;
GO
CREATE PROCEDURE MIGRAR_RANGO_ETARIO
AS
	BEGIN
		INSERT INTO BI_MODEL.RANGO_ETARIO(RANGO_ETARIO)
		VALUES (1, 'Menores a 25 a単os'), (2, 'Entre 25 a 35 a単os'), (3, 'Entre 35 a 55 a単os'), (4, 'Mayores a 55 a単os')
	END
GO

IF OBJECT_ID('MIGRAR_TIPO_MEDIO_PAGO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_TIPO_MEDIO_PAGO;
GO
CREATE PROCEDURE MIGRAR_TIPO_MEDIO_PAGO
AS
	BEGIN
		INSERT INTO BI_MODEL.TIPO_MEDIO_PAGO(TIPO_MEDIO_PAGO_NRO,TIPO_MEDIO_PAGO)
		SELECT DISTINCT MEDIO_PAGO_NRO, MEDIO_PAGO FROM NEW_MODEL.MEDIO_PAGO
	END
GO






CREATE PROCEDURE migrar_bi
AS
BEGIN
	BEGIN TRANSACTION
BEGIN TRY
EXEC MIGRAR_TIEMPO;
EXEC MIGRAR_DIA;
EXEC MIGRAR_RANGO_HORARIO;
EXEC MIGRAR_PROVINCIA;
EXEC MIGRAR_LOCALIDAD;


PRINT '--- Tablas BI migradas correctamente --';
COMMIT TRANSACTION
END TRY
BEGIN CATCH
ROLLBACK TRANSACTION;
THROW 50001, 'No se migraron las tablas BI',1;
END CATCH

END
GO