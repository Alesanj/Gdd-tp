USE GD1C2023
GO

SELECT *
FROM sys.objects
WHERE type IN ('FN', 'IF', 'TF') 

SELECT *
FROM sys.procedures

EXEC borrar_todo

exec crear_tablas
exec migrar_tablas


SELECT DISTINCT LOCAL_NOMBRE, LOCAL_DIRECCION PRODUCTO_LOCAL_CODIGO FROM gd_esquema.Maestra where PRODUCTO_LOCAL_CODIGO IS NOT NULL 
ORDER BY LOCAL_NOMBRE

SELECT DISTINCT REPARTIDOR_DNI, LOCAL_NOMBRE, LOCAL_LOCALIDAD, PEDIDO_NRO FROM gd_esquema.Maestra WHERE REPARTIDOR_DNI IS NOT NULL ORDER BY  REPARTIDOR_DNI, LOCAL_NOMBRE
SELECT DISTINCT REPARTIDOR_DNI, LOCAL_NOMBRE, ENVIO_MENSAJERIA_LOCALIDAD, ENVIO_MENSAJERIA_NRO FROM gd_esquema.Maestra WHERE REPARTIDOR_DNI IS NOT NULL ORDER BY  REPARTIDOR_DNI, LOCAL_NOMBRE

SELECT DISTINCT REPARTIDOR_DNI, LOCAL_NOMBRE, LOCAL_LOCALIDAD, ENVIO_MENSAJERIA_LOCALIDAD FROM gd_esquema.Maestra WHERE REPARTIDOR_DNI IS NOT NULL ORDER BY  REPARTIDOR_DNI, LOCAL_NOMBRE

-- ESTA CONSULTA NOS DEVUELVE UNA ESPECIE "HISTORIAL", DE LAS LOCALIDADES DONDE ESTUVO TRABAJANDO EL REPARTIDOR, YA SEA POR PEDIDO O POR ENVIO, "LA MAS ACTUAL" ACTUAL DEBERIA SER LA LOCALIDAD ACTIVA, EL RESTO NO
-- PODEMOS USAR LA FECHA O FECHA DE ENTREGA COMO ULTIMO LUGAR DONDE ESTUVO EL REPARTIDOR

SELECT DISTINCT PEDIDO_NRO, REPARTIDOR_DNI, LOCAL_NOMBRE, LOCAL_LOCALIDAD, PEDIDO_FECHA ,PEDIDO_FECHA_ENTREGA FROM gd_esquema.Maestra WHERE REPARTIDOR_DNI IS NOT NULL ORDER BY  REPARTIDOR_DNI, LOCAL_NOMBRE

SELECT DISTINCT PEDIDO_NRO, REPARTIDOR_DNI, PEDIDO_FECHA, PEDIDO_FECHA_ENTREGA FROM gd_esquema.Maestra WHERE PEDIDO_NRO IS NOT NULL ORDER BY  PEDIDO_FECHA DESC
-- ESTA FUNCION NOS  ORDENA LOS PEDIDOS POR FECHA EN ORDEN DESCENDENTE Y SELECCIONANDO EL PRIMERO OBTENEMOS EL MAS ACTUAL 

SELECT * FROM(
SELECT DISTINCT PEDIDO_NRO AS NRO_OP,LOCAL_PROVINCIA AS PROVINCIA, LOCAL_LOCALIDAD AS LOCALIDAD, REPARTIDOR_DNI, PEDIDO_FECHA AS FECHA FROM gd_esquema.Maestra WHERE PEDIDO_NRO IS NOT NULL
UNION 
SELECT DISTINCT ENVIO_MENSAJERIA_NRO AS NRO_OP, ENVIO_MENSAJERIA_PROVINCIA AS PROVINCIA, ENVIO_MENSAJERIA_LOCALIDAD AS LOCALIDAD, REPARTIDOR_DNI, ENVIO_MENSAJERIA_FECHA AS FECHA FROM gd_esquema.Maestra WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL
) T WHERE T.REPARTIDOR_DNI = 1295290
ORDER BY FECHA DESC 

SELECT * FROM NEW_MODEL.ALTA

-- ESTE UNION NOS DA LOS ENVIOS + LOS PEDIDOS CON SUS FECHAS, TODOS EN UNA SOLA TABLA, SI ORDENAMOS POR DESC OBTENDREMOS LA MAS ACTUAL


                    borrar_todo
                    crear_tablas
                    migrar_tablas

                    mostrar_funciones
                    mostrar_procedures


select * from new_model.PEDIDO

SELECT * FROM NEW_MODEL.LOCAL_PRODUCTO
select * from gd_esquema.Maestra WHERE pedido_nro = 61254


		SELECT DISTINCT 
        LOCAL_NOMBRE,
        LOCAL_DIRECCION, 
        PRODUCTO_LOCAL_CODIGO,
        PEDIDO_NRO,
        SUM(PRODUCTO_CANTIDAD) as PRODUCTO_CANTIDAD,
        PRODUCTO_LOCAL_PRECIO
        FROM gd_esquema.Maestra where PEDIDO_NRO IS NOT NULL AND PRODUCTO_LOCAL_CODIGO IS NOT NULL
        GROUP BY 
        LOCAL_NOMBRE,
        LOCAL_DIRECCION,
        PRODUCTO_LOCAL_CODIGO,
        PRODUCTO_LOCAL_PRECIO,
        PEDIDO_NRO
        ORDER BY PEDIDO_NRO

        SELECT DISTINCT 
        LOCAL_NOMBRE,
        LOCAL_DIRECCION, 
        PRODUCTO_LOCAL_CODIGO, 
        PEDIDO_NRO,
        PRODUCTO_LOCAL_PRECIO,
        PRODUCTO_CANTIDAD
        FROM gd_esquema.Maestra where PEDIDO_NRO IS NOT NULL AND PRODUCTO_LOCAL_CODIGO IS NOT NULL 
        ORDER BY PEDIDO_NRO

        SELECT * FROM gd_esquema.Maestra WHERE PEDIDO_NRO IS NOT NULL ORDER BY PEDIDO_NRO

        SELECT * FROM NEW_MODEL.LOCAL_PRODUCTO

        SELECT * FROM NEW_MODEL.ITEM ORDER BY ITEM_PEDIDO_NRO

        BORRA

 SELECT DISTINCT dbo.obtenerLocalidadNro(LOCAL_PROVINCIA,LOCAL_LOCALIDAD) AS ALTA_LOCALIDAD_NRO, dbo.obtenerRepartidorNro(REPARTIDOR_DNI) AS ALTA_REPARTIDOR_NRO FROM gd_esquema.Maestra WHERE PEDIDO_NRO IS NOT NULL
        UNION
        SELECT DISTINCT dbo.obtenerLocalidadNro(ENVIO_MENSAJERIA_PROVINCIA, ENVIO_MENSAJERIA_LOCALIDAD) AS ALTA_LOCALIDAD_NRO, dbo.obtenerRepartidorNro(REPARTIDOR_DNI) AS ALTA_REPARTIDOR_NRO FROM gd_esquema.Maestra WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL


                SELECT 
                    T.PROVINCIA,
                    T.LOCALIDAD, 
                    T.REPARTIDOR_DNI,
                    MAX(T.PEDIDO_FECHA)
                FROM (
                    SELECT DISTINCT
                        LOCAL_PROVINCIA AS PROVINCIA,
                        LOCAL_LOCALIDAD AS LOCALIDAD, 
                        REPARTIDOR_DNI AS REPARTIDOR_DNI,
                        PEDIDO_FECHA AS PEDIDO_FECHA
                    FROM gd_esquema.Maestra WHERE PEDIDO_NRO IS NOT NULL
                    UNION
                    SELECT DISTINCT
                        ENVIO_MENSAJERIA_PROVINCIA AS PROVINCIA,
                        ENVIO_MENSAJERIA_LOCALIDAD AS LOCALIDAD, 
                        REPARTIDOR_DNI AS REPARTIDOR_DNI,
                        ENVIO_MENSAJERIA_FECHA AS PEDIDO_FECHA
                    FROM gd_esquema.Maestra WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL
                ) T
                GROUP BY
                    T.PROVINCIA,
                    T.LOCALIDAD, 
                    T.REPARTIDOR_DNI
                ORDER BY REPARTIDOR_DNI

                borrar_todo
                crear_tablas
                migrar_tablas
                mostrar_funciones
                mostrar_procedures


                SELECT * FROM NEW_MODEL.ALTA WHERE ALTA_ACTIVA = 1;

                UPDATE NEW_MODEL.ALTA SET ALTA_ACTIVA = 1
                WHERE (ALTA_REPARTIDOR_NRO, ALTA_FECHA) IN (SELECT TOP 1 sub.ALTA_REPARTIDOR_NRO, sub.ALTA_FECHA FROM NEW_MODEL.ALTA sub WHERE sub.ALTA_REPARTIDOR_NRO = ALTA_REPARTIDOR_NRO ORDER BY SUB.ALTA_FECHA DESC)  

                UPDATE NEW_MODEL.ALTA
                SET ALTA = 1
                WHERE (ALTA_REPARTIDOR_NRO, ALTA_FECHA) IN (
                    SELECT ALTA_REPARTIDOR_NRO, MAX(ALTA_FECHA)
                    FROM NEW_MODEL.ALTA
                    GROUP BY ALTA_REPARTIDOR_NRO
                );

                UPDATE t1
                SET t1.ALTA_ACTIVA = 0
                FROM NEW_MODEL.ALTA t1
                INNER JOIN (
                    SELECT ALTA_REPARTIDOR_NRO, MIN(ALTA_FECHA) AS MAX_FECHA
                    FROM NEW_MODEL.ALTA
                    GROUP BY ALTA_REPARTIDOR_NRO
                ) t2 ON t1.ALTA_REPARTIDOR_NRO = t2.ALTA_REPARTIDOR_NRO AND t1.ALTA_FECHA = t2.MAX_FECHA;

                UPDATE tabla_alta
                SET ALTA_ACTIVA = 1
                FROM NEW_MODEL.ALTA tabla_alta
                SELECT * FROM NEW_MODEL.ALTA tabla_alta
                JOIN (
                    SELECT ALTA_REPARTIDOR_NRO, MAX(ALTA_FECHA) AS max_fecha
                    FROM NEW_MODEL.ALTA
                    GROUP BY ALTA_REPARTIDOR_NRO
                ) sub ON tabla_alta.ALTA_REPARTIDOR_NRO = sub.ALTA_REPARTIDOR_NRO AND tabla_alta.ALTA_FECHA = sub.max_fecha;

                SELECT ALTA_REPARTIDOR_NRO, ALTA_FECHA, COUNT(*) AS CANT FROM NEW_MODEL.ALTA
                GROUP BY ALTA_REPARTIDOR_NRO,ALTA_FECHA 
                HAVING COUNT(*)>1




                SELECT * FROM NEW_MODEL.ALTA WHERE ALTA_ACTIVA = 1 ORDER BY ALTA_REPARTIDOR_NRO, ALTA_FECHA

                update NEW_MODEL.ALTA 
                SET ALTA_ACTIVA = 0 WHERE ALTA_ACTIVA = 1


                SELECT DISTINCT ALTA_REPARTIDOR_NRO FROM NEW_MODEL.ALTA ORDER BY ALTA_REPARTIDOR_NRO, ALTA_FECHA DESC

                SELECT * FROM NEW_MODEL.ALTA ORDER BY ALTA_REPARTIDOR_NRO, ALTA_FECHA DESC


                SELECT TOP 1 * FROM NEW_MODEL.ALTA sub WHERE sub.ALTA_REPARTIDOR_NRO = ALTA_REPARTIDOR_NRO ORDER BY SUB.ALTA_FECHA DESC

              select * from NEW_MODEL.ALTA

              BORRAR_TODO
              limpiar_cache
              crear_tablas
              mostrar_funciones
              mostrar_procedures

              SELECT * FROM NEW_MODEL.TARJETA
               SELECT * FROM NEW_MODEL.MEDIO_PAGO


              SELECT * FROM NEW_MODEL.LOCALIDAD

	SELECT DISTINCT RECLAMO_NRO,(USUARIO_DNI),PEDIDO_NRO,(RECLAMO_TIPO),(RECLAMO_ESTADO),(OPERADOR_RECLAMO_DNI),RECLAMO_FECHA,RECLAMO_DESCRIPCION,RECLAMO_FECHA_SOLUCION ,RECLAMO_SOLUCION,RECLAMO_CALIFICACION  FROM gd_esquema.Maestra
	WHERE RECLAMO_NRO IS NOT NULL

    SELECT DISTINCT CUPON_NRO,dbo.obtenerUsuarioNro(USUARIO_DNI),PEDIDO_NRO,dbo.obtenerCuponTipoNro(CUPON_TIPO),CUPON_MONTO,CUPON_FECHA_ALTA,CUPON_FECHA_VENCIMIENTO FROM gd_esquema.Maestra
	WHERE CUPON_NRO IS NOT NULL

SELECT DISTINCT * FROM 
                    (
                    SELECT CUPON_NRO FROM gd_esquema.Maestra WHERE CUPON_NRO IS NOT NULL
                    UNION
                    SELECT CUPON_RECLAMO_NRO FROM gd_esquema.Maestra WHERE CUPON_RECLAMO_NRO IS NOT NULL
                    ) y


	SELECT DISTINCT CUPON_TIPO FROM gd_esquema.Maestra
	WHERE CUPON_TIPO IS NOT NULL
    UNION
    SELECT DISTINCT CUPON_RECLAMO_TIPO FROM gd_esquema.Maestra
	WHERE CUPON_RECLAMO_TIPO IS NOT NULL

	SELECT DISTINCT OPERADOR_RECLAMO_NOMBRE ,OPERADOR_RECLAMO_APELLIDO ,OPERADOR_RECLAMO_DNI ,OPERADOR_RECLAMO_TELEFONO ,OPERADOR_RECLAMO_DIRECCION ,OPERADOR_RECLAMO_MAIL ,OPERADOR_RECLAMO_FECHA_NAC FROM gd_esquema.Maestra
	WHERE OPERADOR_RECLAMO_DNI IS NOT NULL order by OPERADOR_RECLAMO_DNI

    SELECT OPERADOR_RECLAMO_DNI, COUNT(*) AS CANT FROM gd_esquema.Maestra GROUP BY OPERADOR_RECLAMO_DNI
    HAVING COUNT(*) >1

    SELECT * FROM gd_esquema.Maestra WHERE OPERADOR_RECLAMO_DNI = 4170422
    SELECT * FROM gd_esquema.Maestra WHERE OPERADOR_RECLAMO_MAIL = 'dayraledesma@gmail.com'

    SELECT OPERADOR_RECLAMO_MAIL, COUNT(*) AS CANT FROM gd_esquema.Maestra GROUP BY OPERADOR_RECLAMO_MAIL
    HAVING COUNT(*) >1

    dni 4170422 MISMO DNI DISTINTO NOM APE
    mail abielbravo@gmail.com DISTINTTO DNI, mismo nombre, distintos datos
    todos los operadores tienen para un mismo mail dos dnis distintos (mismo nom y ape)

    SELECT DISTINCT OPERADOR_RECLAMO_DNI, OPERADOR_RECLAMO_NOMBRE, OPERADOR_RECLAMO_APELLIDO FROM gd_esquema.Maestra WHERE OPERADOR_RECLAMO_DNI IS NOT NULL
    SELECT DISTINCT OPERADOR_RECLAMO_NOMBRE ,OPERADOR_RECLAMO_APELLIDO ,OPERADOR_RECLAMO_DNI ,OPERADOR_RECLAMO_TELEFONO ,OPERADOR_RECLAMO_DIRECCION ,OPERADOR_RECLAMO_MAIL ,OPERADOR_RECLAMO_FECHA_NAC FROM gd_esquema.Maestra
	WHERE OPERADOR_RECLAMO_DNI IS NOT NULL AND OPERADOR_RECLAMO_DNI =4170422

	WHERE OPERADOR_RECLAMO_DNI IS NOT NULL


    	SELECT DISTINCT CUPON_NRO AS NUMERO,
                        USUARIO_DNI,
                        PEDIDO_NRO,
                        CUPON_TIPO AS TIPO,
                        CUPON_MONTO AS MONTO,
                        CUPON_FECHA_ALTA AS ALTA,
                        CUPON_FECHA_VENCIMIENTO AS VENCIMIENTO
                        FROM gd_esquema.Maestra
        WHERE CUPON_NRO IS NOT NULL
        UNION
        SELECT DISTINCT CUPON_RECLAMO_NRO AS NUMERO,
                        USUARIO_DNI,
                        PEDIDO_NRO,
                        CUPON_RECLAMO_TIPO AS TIPO,
                        CUPON_RECLAMO_MONTO AS MONTO,
                        CUPON_RECLAMO_FECHA_ALTA AS ALTA,
                        CUPON_RECLAMO_FECHA_VENCIMIENTO AS VENCIMIENTO
                        FROM gd_esquema.Maestra
        WHERE CUPON_RECLAMO_NRO IS NOT NULL

        SELECT DISTINCT CUPON_RECLAMO_NRO
                        FROM gd_esquema.Maestra
        WHERE CUPON_RECLAMO_NRO IS NOT NULL

        select * from new_model.CUPON_TIPO

        EXEC borrar_todo




    SELECT DISTINCT CUPON_NRO
    FROM gd_esquema.Maestra
    WHERE CUPON_NRO IS NOT NULL
    UNION
    SELECT DISTINCT CUPON_RECLAMO_NRO AS NUMERO
    FROM gd_esquema.Maestra
    WHERE CUPON_RECLAMO_NRO IS NOT NULL

	SELECT DISTINCT 
                RECLAMO_NRO,
                (USUARIO_DNI),
                PEDIDO_NRO,
                (RECLAMO_TIPO),
                (RECLAMO_ESTADO),
                (OPERADOR_RECLAMO_DNI),
                RECLAMO_FECHA,
                RECLAMO_DESCRIPCION,
                RECLAMO_FECHA_SOLUCION,
                RECLAMO_SOLUCION,
                RECLAMO_CALIFICACION  
                FROM gd_esquema.Maestra
	WHERE RECLAMO_NRO IS NOT NULL
    