USE GD1C2023
GO

-- CREACION DEL SCHEMA --

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'NEW_MODEL')
BEGIN
    EXEC('CREATE SCHEMA NEW_MODEL');
END

-- CREACION DE TABLAS --

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'dropear_tablas')
DROP PROCEDURE dropear_tablas
GO
CREATE PROCEDURE dropear_tablas
AS
BEGIN
BEGIN TRANSACTION
BEGIN TRY
IF OBJECT_ID('NEW_MODEL.PAGO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PAGO
IF OBJECT_ID('NEW_MODEL.MENSAJERIA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.MENSAJERIA
IF OBJECT_ID('NEW_MODEL.ENVIO_MENSAJERIA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.ENVIO_MENSAJERIA
IF OBJECT_ID('NEW_MODEL.MENSAJERIA_ESTADO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.MENSAJERIA_ESTADO
IF OBJECT_ID('NEW_MODEL.PAQUETE', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PAQUETE
IF OBJECT_ID('NEW_MODEL.TIPO_PAQUETE', 'U') IS NOT NULL DROP TABLE NEW_MODEL.TIPO_PAQUETE
IF OBJECT_ID('NEW_MODEL.CUPON_RECLAMO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.CUPON_RECLAMO
IF OBJECT_ID('NEW_MODEL.CUPON', 'U') IS NOT NULL DROP TABLE NEW_MODEL.CUPON
IF OBJECT_ID('NEW_MODEL.CUPON_TIPO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.CUPON_TIPO
IF OBJECT_ID('NEW_MODEL.RECLAMO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.RECLAMO
IF OBJECT_ID('NEW_MODEL.OPERADOR', 'U') IS NOT NULL DROP TABLE NEW_MODEL.OPERADOR
IF OBJECT_ID('NEW_MODEL.ESTADO_RECLAMO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.ESTADO_RECLAMO
IF OBJECT_ID('NEW_MODEL.TIPO_RECLAMO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.TIPO_RECLAMO
IF OBJECT_ID('NEW_MODEL.ITEM', 'U') IS NOT NULL DROP TABLE NEW_MODEL.ITEM
IF OBJECT_ID('NEW_MODEL.LOCAL_PRODUCTO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.LOCAL_PRODUCTO
IF OBJECT_ID('NEW_MODEL.PRODUCTO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PRODUCTO
IF OBJECT_ID('NEW_MODEL.HORARIO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.HORARIO
IF OBJECT_ID('NEW_MODEL.DIA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.DIA
IF OBJECT_ID('NEW_MODEL.LOCAL', 'U') IS NOT NULL DROP TABLE NEW_MODEL.LOCAL
IF OBJECT_ID('NEW_MODEL.TIPO_LOCAL', 'U') IS NOT NULL DROP TABLE NEW_MODEL.TIPO_LOCAL
IF OBJECT_ID('NEW_MODEL.CATEGORIA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.CATEGORIA
IF OBJECT_ID('NEW_MODEL.PEDIDO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PEDIDO
IF OBJECT_ID('NEW_MODEL.MEDIO_PAGO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.MEDIO_PAGO
IF OBJECT_ID('NEW_MODEL.TARJETA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.TARJETA
IF OBJECT_ID('NEW_MODEL.MARCA_TARJETA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.MARCA_TARJETA
IF OBJECT_ID('NEW_MODEL.PEDIDO_ESTADO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PEDIDO_ESTADO
IF OBJECT_ID('NEW_MODEL.PEDIDO_ENVIO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PEDIDO_ENVIO
IF OBJECT_ID('NEW_MODEL.DIRECCION_USUARIO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.DIRECCION_USUARIO
IF OBJECT_ID('NEW_MODEL.ALTA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.ALTA
IF OBJECT_ID('NEW_MODEL.REPARTIDOR', 'U') IS NOT NULL DROP TABLE NEW_MODEL.REPARTIDOR
IF OBJECT_ID('NEW_MODEL.TIPO_MOVILIDAD', 'U') IS NOT NULL DROP TABLE NEW_MODEL.TIPO_MOVILIDAD
IF OBJECT_ID('NEW_MODEL.USUARIO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.USUARIO
IF OBJECT_ID('NEW_MODEL.LOCALIDAD', 'U') IS NOT NULL DROP TABLE NEW_MODEL.LOCALIDAD
IF OBJECT_ID('NEW_MODEL.PROVINCIA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PROVINCIA

PRINT('Tablas dropeadas')
COMMIT TRANSACTION;
END TRY
BEGIN CATCH
ROLLBACK TRANSACTION;
THROW 50001, 'Error al hacer DROP TABLAS',1;
END CATCH
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'crear_tablas')
DROP PROCEDURE crear_tablas
GO
CREATE PROCEDURE crear_tablas
AS
BEGIN
	EXEC dropear_tablas;
	IF OBJECT_ID('NEW_MODEL.PROVINCIA', 'U') IS NULL
    CREATE TABLE NEW_MODEL.PROVINCIA(
	PROVINCIA_NRO int IDENTITY PRIMARY KEY,
	PROVINCIA_NOMBRE nvarchar(255) NOT NULL UNIQUE
	);

    IF OBJECT_ID('NEW_MODEL.LOCALIDAD', 'U') IS NULL
    CREATE TABLE NEW_MODEL.LOCALIDAD(
        LOCALIDAD_NRO int IDENTITY PRIMARY KEY,
        LOCALIDAD_PRIVINCIA_NRO int REFERENCES NEW_MODEL.PROVINCIA,
        LOCALIDAD_NOMBRE nvarchar(255) NOT NULL,
    );

    IF OBJECT_ID('NEW_MODEL.USUARIO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.USUARIO(
        USUARIO_NRO int IDENTITY PRIMARY KEY,
        USUARIO_NOMBRE nvarchar(255) NOT NULL,
        USUARIO_APELLIDO nvarchar(255) NOT NULL,
        USUARIO_DNI decimaL(18,0) NOT NULL UNIQUE,
        USUARIO_FECHA_REGISTRO datetime2(3) NOT NULL,  
        USUARIO_TELEFONO decimal(18, 0) NOT NULL,
        USUARIO_MAIL nvarchar(255) NOT NULL UNIQUE,      
        USUARIO_FECHA_NAC date NOT NULL
    );

    IF OBJECT_ID('NEW_MODEL.TIPO_MOVILIDAD', 'U') IS NULL
    CREATE TABLE NEW_MODEL.TIPO_MOVILIDAD(
    TIPO_MOVILIDAD_NRO int IDENTITY PRIMARY KEY,
    TIPO_MOVILIDAD_NOMBRE nvarchar(50) NOT NULL UNIQUE
    );

    IF OBJECT_ID('NEW_MODEL.REPARTIDOR', 'U') IS NULL
    CREATE TABLE NEW_MODEL.REPARTIDOR(
        REPARTIDOR_NRO int IDENTITY PRIMARY KEY,
        REPARTIDOR_TIPO_MOVILIDAD_NRO int REFERENCES NEW_MODEL.TIPO_MOVILIDAD,
        REPARTIDOR_NOMBRE nvarchar(255) NOT NULL,
        REPARTIDOR_APELLIDO nvarchar(255) NOT NULL,
        REPARTIDOR_DNI decimal(18, 0) NOT NULL UNIQUE,
        REPARTIDOR_TELEFONO decimal(18, 0) NOT NULL,
        REPARTIDOR_DIRECCION nvarchar(255) NOT NULL,
        REPARTIDOR_EMAIL nvarchar(255) NOT NULL,
        REPARTIDOR_FECHA_NAC date NOT NULL,
    );

    IF OBJECT_ID('NEW_MODEL.ALTA', 'U') IS NULL
    CREATE TABLE NEW_MODEL.ALTA(
        ALTA_REPARTIDOR_NRO int REFERENCES NEW_MODEL.REPARTIDOR,
        ALTA_LOCALIDAD_NRO int REFERENCES NEW_MODEL.LOCALIDAD,
        ALTA_ACTIVA BIT NOT NULL DEFAULT 0,
        PRIMARY KEY(ALTA_REPARTIDOR_NRO,ALTA_LOCALIDAD_NRO)
    );

    IF OBJECT_ID('NEW_MODEL.DIRECCION_USUARIO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.DIRECCION_USUARIO(
        DIRECCION_USUARIO_NRO int IDENTITY PRIMARY KEY,
        DIRECCION_USUARIO_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO NOT NULL,
        DIRECCION_USUARIO_LOCALIDAD_NRO int REFERENCES NEW_MODEL.LOCALIDAD NOT NULL,
        DIRECCION_USUARIO_NOMBRE nvarchar(50) NOT NULL,
        DIRECCION_USUARIO_DIRECCION nvarchar(255) NOT NULL,
    );


    IF OBJECT_ID('NEW_MODEL.PEDIDO_ENVIO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.PEDIDO_ENVIO(
        PEDIDO_ENVIO_NRO int IDENTITY PRIMARY KEY,
        PEDIDO_ENVIO_REPARTIDOR_NRO int REFERENCES NEW_MODEL.REPARTIDOR,
        PEDIDO_ENVIO_DIRECCION_USUARIO_NRO int REFERENCES NEW_MODEL.DIRECCION_USUARIO NOT NULL,
        PEDIDO_ENVIO_OBSERV nvarchar(255) NULL,
        PEDIDO_ENVIO_FECHA datetime NOT NULL,
        PEDIDO_ENVIO_FECHA_ENTREGA datetime NOT NULL,
    );


    IF OBJECT_ID('NEW_MODEL.PEDIDO_ESTADO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.PEDIDO_ESTADO(
        PEDIDO_ESTADO_NRO int IDENTITY PRIMARY KEY,
        PEDIDO_ESTADO nvarchar(50) NOT NULL UNIQUE
    );


    IF OBJECT_ID('NEW_MODEL.MARCA_TARJETA', 'U') IS NULL
    CREATE TABLE NEW_MODEL.MARCA_TARJETA(
        MARCA_TARJETA_NRO int IDENTITY PRIMARY KEY,
        MARCA_TARJETA nvarchar(100) NOT NULL UNIQUE
    );

    IF OBJECT_ID('NEW_MODEL.TARJETA', 'U') IS NULL
    CREATE TABLE NEW_MODEL.TARJETA(
        TARJETA_NRO int IDENTITY PRIMARY KEY,
        TARJETA_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO,
        TARJETA_MARCA_NRO int REFERENCES NEW_MODEL.MARCA_TARJETA,
        TARJETA nvarchar(50) NOT NULL,
        CONSTRAINT UQ_TarjetaMarcaNumero UNIQUE (TARJETA_MARCA_NRO, TARJETA)
    );

    IF OBJECT_ID('NEW_MODEL.MEDIO_PAGO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.MEDIO_PAGO(
        MEDIO_PAGO_NRO int IDENTITY PRIMARY KEY,
        MEDIO_PAGO nvarchar(50) NOT NULL UNIQUE
    );

    IF OBJECT_ID('NEW_MODEL.PEDIDO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.PEDIDO(
        PEDIDO_NRO int PRIMARY KEY,
        PEDIDO_ENVIO_NRO int REFERENCES NEW_MODEL.PEDIDO_ENVIO NOT NULL,
        PEDIDO_ESTADO_NRO int REFERENCES NEW_MODEL.PEDIDO_ESTADO NOT NULL,
        PEDIDO_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO NOT NULL,
        PEDIDO_TOTAL_CUPONES decimal(18, 2) NULL,
        PEDIDO_TARIFA_SERVICIO decimal(18, 2) NULL,
        PEDIDO_PROPINA decimal(18, 2) NULL,
        PEDIDO_PRECIO_ENVIO decimal(18, 2) NULL,
        PEDIDO_TOTAL_SERVICIO decimal(18, 2) NULL,
        PEDIDO_TOTAL_PRODUCTOS decimal(18, 2) NULL,
        PEDIDO_CALIFICACION decimal(18, 0) NULL,
        PEDIDO_TIEMPO_ESTIMADO decimal(18, 2) NULL,
    );

    IF OBJECT_ID('NEW_MODEL.CATEGORIA', 'U') IS NULL
    CREATE TABLE NEW_MODEL.CATEGORIA(
        CATEGORIA_NRO int IDENTITY PRIMARY KEY,
        CATEGORIA_NOMBRE nvarchar(50) NOT NULL UNIQUE,
    );

    IF OBJECT_ID('NEW_MODEL.TIPO_LOCAL', 'U') IS NULL
    CREATE TABLE NEW_MODEL.TIPO_LOCAL(
        TIPO_LOCAL_NRO int IDENTITY PRIMARY KEY,
        TIPO_LOCAL_CATEGORIA_NRO int REFERENCES NEW_MODEL.CATEGORIA NULL,
        TIPO_LOCAL_NOMBRE nvarchar(50) NOT NULL UNIQUE
    );


    IF OBJECT_ID('NEW_MODEL.LOCAL', 'U') IS NULL
    CREATE TABLE NEW_MODEL.LOCAL(
        LOCAL_NRO int IDENTITY PRIMARY KEY,
        LOCAL_TIPO_LOCAL_NRO int REFERENCES NEW_MODEL.TIPO_LOCAL,
        LOCAL_LOCALIDAD_NRO int REFERENCES NEW_MODEL.LOCALIDAD,
        LOCAL_NOMBRE nvarchar(100) NOT NULL,
        LOCAL_DESCRIPCION nvarchar(255) NOT NULL,
        LOCAL_DIRECCION nvarchar(255) NOT NULL,
    );

    IF OBJECT_ID('NEW_MODEL.DIA', 'U') IS NULL
    CREATE TABLE NEW_MODEL.DIA(
        DIA_NRO int IDENTITY PRIMARY KEY,
        DIA_NOMBRE nvarchar(50) NULL,

    );

    IF OBJECT_ID('NEW_MODEL.HORARIO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.HORARIO(
        HORARIO_NRO int IDENTITY PRIMARY KEY,
        HORARIO_LOCAL_NRO int REFERENCES NEW_MODEL.LOCAL,
        HORARIO_DIA_NRO int REFERENCES NEW_MODEL.DIA,
        HORARIO_LOCAL_HORA_APERTURA decimal(18, 0) NULL,
        HORARIO_LOCAL_HORA_CIERRE decimal(18, 0) NULL,
    );


    IF OBJECT_ID('NEW_MODEL.PRODUCTO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.PRODUCTO(
        PRODUCTO_NRO int IDENTITY PRIMARY KEY,
        PRODUCTO_CODIGO nvarchar(50) UNIQUE,
        PRODUCTO_NOMBRE nvarchar(50) NOT NULL,
        PRODUCTO_DESCRIPCION nvarchar(255) NOT NULL,
    );

    IF OBJECT_ID('NEW_MODEL.LOCAL_PRODUCTO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.LOCAL_PRODUCTO(
        LOCAL_PRODUCTO_LOCAL_NRO int REFERENCES NEW_MODEL.LOCAL,
        LOCAL_PRODUCTO_PRODUCTO_NRO int REFERENCES NEW_MODEL.PRODUCTO,
        PRIMARY KEY(LOCAL_PRODUCTO_LOCAL_NRO, LOCAL_PRODUCTO_PRODUCTO_NRO)
    );

    IF OBJECT_ID('NEW_MODEL.ITEM', 'U') IS NULL
    CREATE TABLE NEW_MODEL.ITEM(
        ITEM_LOCAL_PRODUCTO_LOCAL_NRO int,
        ITEM_LOCAL_PRODUCTO_PRODUCTO_NRO int,
        ITEM_PEDIDO_NRO int REFERENCES NEW_MODEL.PEDIDO,
        ITEM_CANTIDAD decimal(18,0) DEFAULT 0 NOT NULL,
        ITEM_PRECIO decimal(18,2) DEFAULT 0 NOT NULL,
        ITEM_TOTAL decimal(18,2) DEFAULT 0 NOT NULL,
        FOREIGN KEY (ITEM_LOCAL_PRODUCTO_LOCAL_NRO, ITEM_LOCAL_PRODUCTO_PRODUCTO_NRO) REFERENCES NEW_MODEL.LOCAL_PRODUCTO(LOCAL_PRODUCTO_LOCAL_NRO, LOCAL_PRODUCTO_PRODUCTO_NRO),
        PRIMARY KEY(ITEM_LOCAL_PRODUCTO_LOCAL_NRO, ITEM_LOCAL_PRODUCTO_PRODUCTO_NRO,ITEM_PEDIDO_NRO)
    );

    IF OBJECT_ID('NEW_MODEL.TIPO_RECLAMO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.TIPO_RECLAMO(
        TIPO_RECLAMO_NRO int IDENTITY PRIMARY KEY,
        TIPO_RECLAMO_NOMBRE nvarchar(50) NOT NULL
    );

    IF OBJECT_ID('NEW_MODEL.ESTADO_RECLAMO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.ESTADO_RECLAMO(
        ESTADO_RECLAMO_NRO int IDENTITY PRIMARY KEY,
        ESTADO_RECLAMO_NOMBRE NVARCHAR(50) NOT NULL
    );

    IF OBJECT_ID('NEW_MODEL.OPERADOR', 'U') IS NULL
    CREATE TABLE NEW_MODEL.OPERADOR(
        OPERADOR_NRO int IDENTITY PRIMARY KEY,
        OPERADOR_RECLAMO_DNI_NUMERO int ,
        OPERADOR_RECLAMO_NOMBRE nvarchar(255) NOT NULL,
        OPERADOR_RECLAMO_APELLIDO nvarchar(255) NOT NULL,
        OPERADOR_RECLAMO_TELEFONO decimal(18,0) NOT NULL,
        OPERADOR_RECLAMO_DIRECCION nvarchar(255) NOT NULL,
        OPERADOR_RECLAMO_MAIL nvarchar(255) NOT NULL,
        OPERADOR_RECLAMO_FECHA_NAC datetime NOT NULL
    );
	
    IF OBJECT_ID('NEW_MODEL.RECLAMO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.RECLAMO(
        RECLAMO_NRO	int IDENTITY PRIMARY KEY,
        RECLAMO_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO,
        RECLAMO_PEDIDO_NRO int REFERENCES NEW_MODEL.PEDIDO,
        RECLAMO_TIPO_RECLAMO_NRO int REFERENCES NEW_MODEL.TIPO_RECLAMO,
        RECLAMO_ESTADO_RECLAMO_NRO int REFERENCES NEW_MODEL.ESTADO_RECLAMO,
        RECLAMO_OPERADOR_NRO int REFERENCES NEW_MODEL.OPERADOR,
        RECLAMO_FECHA datetime NOT NULL,
        RECLAMO_DESCRIPCION nvarchar(255) NOT NULL,
        RECLAMO_FECHA_SOLUCION datetime NULL,
        RECLAMO_SOLUCION nvarchar(255) NULL,
        RECLAMO_CALIFICACION decimal(18, 0) NOT NULL
    );

    IF OBJECT_ID('NEW_MODEL.CUPON_TIPO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.CUPON_TIPO(
        CUPON_TIPO_NRO int IDENTITY PRIMARY KEY,
        CUPON_TIPO_NOMBRE nvarchar(50) NULL,
    );


    IF OBJECT_ID('NEW_MODEL.CUPON', 'U') IS NULL
    CREATE TABLE NEW_MODEL.CUPON(
        CUPON_NRO int IDENTITY PRIMARY KEY,                         
        CUPON_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO,
        CUPON_PEDIDO_NRO int REFERENCES NEW_MODEL.PEDIDO,
        CUPON_TIPO_NRO int REFERENCES NEW_MODEL.CUPON_TIPO,
        CUPON_MONTO decimal(18,2) NULL,
        CUPON_FECHA_ALTA datetime NULL,
        CUPON_FECHA_VENCIMIENTO datetime NULL
    );

    IF OBJECT_ID('NEW_MODEL.CUPON_RECLAMO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.CUPON_RECLAMO(
        CUPON_RECLAMO_CUPON_NRO int REFERENCES NEW_MODEL.CUPON,
        CUPON_RECLAMO_RECLAMO_NRO int REFERENCES NEW_MODEL.RECLAMO,
        PRIMARY KEY(CUPON_RECLAMO_CUPON_NRO,CUPON_RECLAMO_RECLAMO_NRO)
    );

    IF OBJECT_ID('NEW_MODEL.TIPO_PAQUETE', 'U') IS NULL
    CREATE TABLE NEW_MODEL.TIPO_PAQUETE(
        TIPO_PAQUETE_NRO int IDENTITY PRIMARY KEY,
        TIPO_PAQUETE_NOMBRE  nvarchar(50) NOT NULL UNIQUE,     
        PAQUETE_ALTO_MAX decimal(18,2) NOT NULL,     
        PAQUETE_ANCHO_MAX decimal(18,2) NOT NULL,     
        PAQUETE_LARGO_MAX decimal(18,2) NOT NULL,     
        PAQUETE_PESO_MAX decimal(18,2) NOT NULL
    );

    IF OBJECT_ID('NEW_MODEL.PAQUETE', 'U') IS NULL
    CREATE TABLE NEW_MODEL.PAQUETE(
        PAQUETE_NRO int IDENTITY PRIMARY KEY,
        PAQUETE_TIPO_PAQUETE_NRO int REFERENCES NEW_MODEL.TIPO_PAQUETE,     
        TIPO_PAQUETE_PRECIO decimal(18,2) NULL
    );

    IF OBJECT_ID('NEW_MODEL.MENSAJERIA_ESTADO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.MENSAJERIA_ESTADO(
        MENSAJERIA_ESTADO_NRO int IDENTITY PRIMARY KEY,
        ENVIO_MENSAJERIA_ESTADO nvarchar(50) NULL,
    );
 
    IF OBJECT_ID('NEW_MODEL.ENVIO_MENSAJERIA', 'U') IS NULL
    CREATE TABLE NEW_MODEL.ENVIO_MENSAJERIA(
<<<<<<< HEAD
        ENVIO_MENSAJERIA_NRO int IDENTITY PRIMARY KEY,
        ENVIO_MENSAJERIA_LOCALIDAD_NRO int REFERENCES NEW_MODEL.LOCALIDAD NOT NULL,
        ENVIO_MENSAJERIA_REPARTIDOR_NRO int REFERENCES NEW_MODEL.REPARTIDOR NOT NULL,
        ENVIO_MENSAJERIA_DIR_ORIG nvarchar(255) NOT NULL,
        ENVIO_MENSAJERIA_DIR_DEST nvarchar(255) NOT NULL,
        ENVIO_MENSAJERIA_KM decimal(18, 2) NOT NULL,
        ENVIO_MENSAJERIA_OBSERV nvarchar(255) NULL,
        ENVIO_MENSAJERIA_FECHA datetime NOT NULL,
        ENVIO_MENSAJERIA_FECHA_ENTREGA datetime NULL
=======
        ENVIO_MENSAJERIA int IDENTITY PRIMARY KEY,
        ENVIO_MENSAJERIA_LOCALIDAD_NRO int REFERENCES NEW_MODEL.LOCALIDAD,
        ENVIO_MENSAJERIA_DIR_ORIG nvarchar(255) NULL,
        ENVIO_MENSAJERIA_DIR_DEST nvarchar(255) NULL,
        ENVIO_MENSAJERIA_TIEMPO_ESTIMADO decimal(18, 2) NULL,
        ENVIO_MENSAJERIA_KM decimal(18, 2) NULL,
        ENVIO_MENSAJERIA_PRECIO_ENVIO decimal(18, 2) NULL,
        ENVIO_MENSAJERIA_PROPINA decimal(18, 2) NULL,

>>>>>>> a1fc2fe089e4f693901fdcfe1f53a8199dd0d83d
    );
        
    IF OBJECT_ID('NEW_MODEL.MENSAJERIA', 'U') IS NULL
    CREATE TABLE NEW_MODEL.MENSAJERIA(
<<<<<<< HEAD
        MENSAJERIA_NRO int PRIMARY KEY,
        MENSAJERIA_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO NOT NULL,
        MENSAJERIA_ENVIO_NRO int REFERENCES NEW_MODEL.ENVIO_MENSAJERIA NOT NULL UNIQUE,
        MENSAJERIA_PAQUETE_NRO int REFERENCES NEW_MODEL.PAQUETE NOT NULL,
        MENSAJERIA_ESTADO int REFERENCES NEW_MODEL.MENSAJERIA_ESTADO NOT NULL,
        ENVIO_MENSAJERIA_PRECIO_SEGURO decimal(18, 2) NOT NULL DEFAULT 0,
        ENVIO_MENSAJERIA_PRECIO_ENVIO decimal(18, 2) NOT NULL DEFAULT 0,
        ENVIO_MENSAJERIA_PROPINA decimal(18, 2) NOT NULL DEFAULT 0,
        ENVIO_MENSAJERIA_TOTAL decimal(18, 2) NOT NULL DEFAULT 0,
        ENVIO_MENSAJERIA_VALOR_ASEGURADO decimal(18, 2) NOT NULL DEFAULT 0,
        ENVIO_MENSAJERIA_CALIFICACION decimal(18, 0) NULL,
        ENVIO_MENSAJERIA_TIEMPO_ESTIMADO decimal(18, 2) NOT NULL DEFAULT 0
=======
        MENSAJERIA_NRO int IDENTITY PRIMARY KEY,
        MENSAJERIA_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO,
        MENSAJERIA_REPARTIDOR_NRO int REFERENCES NEW_MODEL.REPARTIDOR,
        MENSAJERIA_MEDIO_PAGO_NRO int REFERENCES NEW_MODEL.MEDIO_PAGO,
        MENSAJERIA_PAQUETE_NRO int REFERENCES NEW_MODEL.PAQUETE,
        MENSAJERIA_ENVIO_NRO int REFERENCES NEW_MODEL.ENVIO_MENSAJERIA,
        MENSAJERIA_ESTADO_NRO int REFERENCES NEW_MODEL.MENSAJERIA_ESTADO,
        MENSAJERIA_TOTAL decimal(18, 2) NULL,
        MENSAJERIA_OBSERV nvarchar(255) NULL,
        MENSAJERIA_FECHA datetime NULL,
		MENSAJERIA_FECHA_ENTREGA datetime NULL,
		MENSAJERIA_VALOR_ASEGURADO decimal(18,2) NULL,
        MENSAJERIA_CALIFICACION decimal(18, 0) NULL,
		MENSAJERIA_PRECIO_SEGURO decimal(18, 2) NULL  
>>>>>>> a1fc2fe089e4f693901fdcfe1f53a8199dd0d83d
    );

    IF OBJECT_ID('NEW_MODEL.PAGO', 'U') IS NULL
    CREATE TABLE NEW_MODEL.PAGO(
        PAGO_NRO int IDENTITY PRIMARY KEY,
        PAGO_PEDIDO_NRO int REFERENCES NEW_MODEL.PEDIDO NULL UNIQUE,
        PAGO_MENSAJERIA_NRO int REFERENCES NEW_MODEL.MENSAJERIA NULL UNIQUE,
        PAGO_MEDIO_PAGO_NRO int REFERENCES NEW_MODEL.MEDIO_PAGO NOT NULL,
        PAGO_TARJETA_NRO int REFERENCES NEW_MODEL.TARJETA NULL
    );

    PRINT('tablas creadas')
END
GO


-- CREACION FUNCIONES
IF OBJECT_ID('obtenerProvincia', 'FN') IS NOT NULL
DROP FUNCTION obtenerProvincia;
GO
CREATE FUNCTION obtenerProvincia(@provinciaNombre nvarchar(255)) RETURNS int 
AS
BEGIN
	DECLARE @provinciaNro int;
	SELECT @provinciaNro = PROVINCIA_NRO FROM NEW_MODEL.PROVINCIA WHERE PROVINCIA_NOMBRE = @provinciaNombre;
	RETURN @provinciaNro;
END
GO

IF OBJECT_ID('obtenerTipoMovilidad', 'FN') IS NOT NULL
DROP FUNCTION obtenerTipoMovilidad;
GO
CREATE FUNCTION obtenerTipoMovilidad(@TipoMovilidadNombre nvarchar(50)) RETURNS int 
AS
    BEGIN
        DECLARE @TipoMovilidadId int;
        SELECT @TipoMovilidadId = TIPO_MOVILIDAD_NRO FROM NEW_MODEL.TIPO_MOVILIDAD WHERE TIPO_MOVILIDAD_NOMBRE = @TipoMovilidadNombre;
        RETURN @TipoMovilidadId;
    END
GO

IF OBJECT_ID('obtenerUsuarioNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerUsuarioNro;
GO
CREATE FUNCTION obtenerUsuarioNro(@usuarioDni decimal(18,0)) RETURNS int
 AS
	BEGIN
		DECLARE @usuario_nro int;
		SELECT @usuario_nro = USUARIO_NRO FROM NEW_MODEL.USUARIO WHERE USUARIO_DNI  = @usuarioDni AND USUARIO_NRO IS NOT NULL;
		RETURN @usuario_nro;
	END
GO  



IF OBJECT_ID('obtenerLocalidadNro', 'FN') IS NOT NULL
DROP FUNCTION  obtenerLocalidadNro;
GO
CREATE FUNCTION  obtenerLocalidadNro(@provincia nvarchar(255),@localidad nvarchar(255)) RETURNS int
AS
	BEGIN
		DECLARE @localidad_nro int;
		DECLARE @provincianro int;
		SET @provincianro = dbo.obtenerProvincia(@provincia);
		SELECT @localidad_nro = LOCALIDAD_NRO FROM NEW_MODEL.LOCALIDAD WHERE LOCALIDAD_PRIVINCIA_NRO = @provincianro AND @localidad = LOCALIDAD_NOMBRE AND LOCALIDAD_NRO IS NOT NULL;
		RETURN @localidad_nro;
	END
GO

IF OBJECT_ID('obtenerCategoriaNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerCategoriaNro;
GO
CREATE FUNCTION  obtenerCategoriaNro(@categoria nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @categoriaNro int;
		SELECT @categoriaNro = CATEGORIA_NRO FROM NEW_MODEL.CATEGORIA WHERE CATEGORIA_NOMBRE = @categoria;
		RETURN @categoriaNro;
	END
GO

IF OBJECT_ID('obtenerTipoLocalNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerTipoLocalNro;
GO
CREATE FUNCTION  obtenerTipoLocalNro(@tipoLocal nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @tipoLocalNro int;
		SELECT @tipoLocalNro = TIPO_LOCAL_NRO FROM NEW_MODEL.TIPO_LOCAL WHERE TIPO_LOCAL_NOMBRE = @tipoLocal;
		RETURN @tipoLocalNro;
	END
GO

IF OBJECT_ID('obtenerLocalNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerLocalNro;
GO
CREATE FUNCTION  obtenerLocalNro(@localNombre nvarchar(50), @localDireccion nvarchar(255)) RETURNS int
AS
	BEGIN
		DECLARE @localNro int;
		SELECT @localNro = LOCAL_NRO FROM NEW_MODEL.LOCAL WHERE LOCAL_NOMBRE = @localNombre AND LOCAL_DIRECCION = @localDireccion;
		RETURN @localNro;
	END
GO

IF OBJECT_ID('obtenerDiaNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerDiaNro;
GO
CREATE FUNCTION  obtenerDiaNro(@diaNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @diaNro int;
		SELECT @diaNro = DIA_NRO FROM NEW_MODEL.DIA WHERE DIA_NOMBRE = @diaNombre;
		RETURN @diaNro;
	END
GO

IF OBJECT_ID('obtenerRepartidorNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerRepartidorNro;
GO
CREATE FUNCTION obtenerRepartidorNro(@repartidorDni decimal(18,0)) RETURNS int
AS
	BEGIN
		DECLARE @repartidorNro int;
		SELECT @repartidorNro = REPARTIDOR_NRO FROM NEW_MODEL.REPARTIDOR WHERE REPARTIDOR_DNI =  @repartidorDni;
		RETURN @repartidorNro;
	END
GO

IF OBJECT_ID('obtenerDireccionUsuarioNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerDireccionUsuarioNro;
GO
CREATE FUNCTION obtenerDireccionUsuarioNro(@direccionNombre nvarchar(50),@direccionDireccion nvarchar(255)) RETURNS int
AS
	BEGIN
		DECLARE @direccionNro int;
		SELECT @direccionNro = DIRECCION_USUARIO_NRO FROM NEW_MODEL.DIRECCION_USUARIO WHERE DIRECCION_USUARIO_NOMBRE =  @direccionNombre AND DIRECCION_USUARIO_DIRECCION = @direccionDireccion;
		RETURN @direccionNro;
	END
GO

IF OBJECT_ID('obtenerProductoNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerProductoNro;
GO
CREATE FUNCTION obtenerProductoNro(@productoCodigo nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @productoNro int;
		SELECT @productoNro = PRODUCTO_NRO FROM NEW_MODEL.PRODUCTO WHERE PRODUCTO_CODIGO =  @productoCodigo;
		RETURN @productoNro;
	END
GO

<<<<<<< HEAD
IF OBJECT_ID('obtenerPedidoEnvioNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerPedidoEnvioNro;
GO
CREATE FUNCTION obtenerPedidoEnvioNro(@repartidorNro int, @fecha datetime) RETURNS int
AS  
	BEGIN
    DECLARE @pedidoEnvioNro int;
    SELECT @pedidoEnvioNro = PEDIDO_ENVIO_NRO
    FROM NEW_MODEL.PEDIDO_ENVIO
    WHERE PEDIDO_ENVIO_REPARTIDOR_NRO = @repartidorNro
        AND CONVERT(date, PEDIDO_ENVIO_FECHA) = CONVERT(date, @fecha);
    RETURN @pedidoEnvioNro;
	END
GO

IF OBJECT_ID('obtenerPedidoEstadoNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerPedidoEstadoNro;
GO
CREATE FUNCTION obtenerPedidoEstadoNro(@pedidoEstado  nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @pedidoEstadoNro int;
		SELECT @pedidoEstadoNro = PEDIDO_ESTADO_NRO FROM NEW_MODEL.PEDIDO_ESTADO WHERE PEDIDO_ESTADO =  @pedidoEstado;
		RETURN @pedidoEstadoNro;
	END
GO

IF OBJECT_ID('obtenerMedioPagoTipoNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerMedioPagoTipoNro;
GO
CREATE FUNCTION obtenerMedioPagoTipoNro(@medioPagoTipo nvarchar(50)) RETURNS int
As
	BEGIN
		DECLARE @MedioPagoTipoNro int;
		SELECT @MedioPagoTipoNro = MEDIO_PAGO_NRO FROM NEW_MODEL.MEDIO_PAGO WHERE MEDIO_PAGO = @medioPagoTipo;
		RETURN @MedioPagoTipoNro;
	END
GO

IF OBJECT_ID('obtenerMarcaTarjetaNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerMarcaTarjetaNro;
GO
CREATE FUNCTION obtenerMarcaTarjetaNro(@marcaTarjeta nvarchar(100)) RETURNS int
As
	BEGIN
		DECLARE @marcaTarjetaNro int;
		SELECT @marcaTarjetaNro = MARCA_TARJETA_NRO FROM NEW_MODEL.MARCA_TARJETA WHERE MARCA_TARJETA = @marcaTarjeta;
		RETURN @marcaTarjetaNro;
	END
GO

IF OBJECT_ID('obtenerTarjetaNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerTarjetaNro;
GO
CREATE FUNCTION obtenerTarjetaNro(@marcaTarjetaNro int, @tarjeta nvarchar(100)) RETURNS int
As
	BEGIN
		DECLARE @tarjetaNro int;
		SELECT @tarjetaNro = TARJETA_NRO FROM NEW_MODEL.TARJETA WHERE TARJETA_MARCA_NRO = @marcaTarjetaNro AND TARJETA = @tarjeta;
		RETURN @tarjetaNro;
	END
GO

=======
IF OBJECT_ID('obtenerPaqueteNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerPaqueteNro;
GO
CREATE FUNCTION obtenerPaqueteNro(@tipoNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @tipoNro int;
		SELECT Distinct @tipoNro = TIPO_PAQUETE_NRO FROM NEW_MODEL.TIPO_PAQUETE WHERE TIPO_PAQUETE_NOMBRE = @tipoNombre;
		RETURN @tipoNro;
	END
GO

IF OBJECT_ID('obtenerLocalidadMensajeriaNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerLocalidadMensajeriaNro;
GO

CREATE FUNCTION obtenerLocalidadMensajeriaNro(@localidadMensajeria nvarchar(255)) RETURNS int
As
	BEGIN
		DECLARE @localidadNro int;
		SELECT @localidadNro = LOCALIDAD_NRO FROM NEW_MODEL.LOCALIDAD WHERE LOCALIDAD_NOMBRE = @localidadMensajeria;
		RETURN @localidadNro;
	END
GO

IF OBJECT_ID('obtenerPagoTipo', 'FN') IS NOT NULL
DROP FUNCTION obtenerPagoTipo;
GO

CREATE FUNCTION obtenerPagoTipo(@tipoPago nvarchar(50)) RETURNS int
As
	BEGIN
		DECLARE @TipoPagoNro int;
		SELECT @TipoPagoNro = MEDIO_PAGO_TIPO_NRO FROM NEW_MODEL.MEDIO_PAGO_TIPO WHERE MEDIO_PAGO_TIPO = @tipoPago;
		RETURN @TipoPagoNro;
	END
GO


CREATE FUNCTION obtenerMedioDePago(@nombreDeTipo nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @numeroTipo int;
		SELECT @numeroTipo = MEDIO_PAGO_TIPO_NRO FROM NEW_MODEL.MEDIO_PAGO_TIPO WHERE MEDIO_PAGO_TIPO = @nombreDeTipo;
		RETURN @numeroTipo;
	END
GO

CREATE FUNCTION obtenerMensajeriaNumero(@dirDest nvarchar(50),@tiempoEstimado decimal(18,2),@precioEnvio decimal(18,2)) RETURNS int
AS
	BEGIN
		DECLARE @numeroEnvio int;
		SELECT @numeroEnvio = ENVIO_MENSAJERIA FROM NEW_MODEL.ENVIO_MENSAJERIA WHERE ENVIO_MENSAJERIA_DIR_DEST = @dirDest AND ENVIO_MENSAJERIA_TIEMPO_ESTIMADO = @tiempoEstimado AND  ENVIO_MENSAJERIA_PRECIO_ENVIO = @precioEnvio;
		RETURN @numeroEnvio;
	END
GO

CREATE FUNCTION obtenerEstadoNro(@estadoNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @numeroEstado int;
		SELECT @numeroEstado = MENSAJERIA_ESTADO_NRO FROM NEW_MODEL.MENSAJERIA_ESTADO WHERE ENVIO_MENSAJERIA_ESTADO= @estadoNombre ;
		RETURN @numeroEstado;
	END
GO

CREATE FUNCTION obtenerReclamoNro(@pedidoNro decimal(18,0)) RETURNS int
AS
	BEGIN
		DECLARE @nroReclamo int;
		SELECT @nroReclamo = RECLAMO_NRO FROM NEW_MODEL.RECLAMO WHERE @pedidoNro = RECLAMO_PEDIDO_NRO AND RECLAMO_NRO IS NOT NULL
		RETURN @nroReclamo
	END
GO

CREATE FUNCTION obtenerCuponNro(@pedidoNro decimal(18,0)) RETURNS int
AS
	BEGIN
		DECLARE @nroCupon int;
		SELECT @nroCupon = CUPON_NRO FROM NEW_MODEL.CUPON WHERE @pedidoNro = CUPON_PEDIDO_NRO AND CUPON_NRO IS NOT NULL
		RETURN @nroCupon
	END
GO



CREATE FUNCTION obtenerTipoReclamo(@tipoNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @nroTipo int;
		SELECT @nroTipo = TIPO_RECLAMO_NRO FROM NEW_MODEL.TIPO_RECLAMO WHERE @tipoNombre = TIPO_RECLAMO_NOMBRE
		RETURN @nroTipo
	END
GO

CREATE FUNCTION obtenerEstadoReclamo(@estadoNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @estadoTipo int;
		SELECT @estadoTipo = ESTADO_RECLAMO_NRO FROM NEW_MODEL.ESTADO_RECLAMO WHERE @estadoNombre = ESTADO_RECLAMO_NOMBRE
		RETURN @estadoTipo
	END
GO

CREATE FUNCTION obtenerOperadorNro(@operadorDNI decimal(18,0)) RETURNS int
AS
	BEGIN
		DECLARE @nroOP int;
		SELECT @nroOP = OPERADOR_NRO FROM NEW_MODEL.OPERADOR WHERE @operadorDNI = OPERADOR_RECLAMO_DNI_NUMERO
		RETURN @nroOP
	END
GO

CREATE FUNCTION obtenerCuponTipoNro(@tipoNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @nroTipo int;
		SELECT @nroTipo = CUPON_TIPO_NRO FROM NEW_MODEL.CUPON_TIPO WHERE @tipoNombre = CUPON_TIPO_NOMBRE
		RETURN @nroTipo
	END
GO




>>>>>>> a1fc2fe089e4f693901fdcfe1f53a8199dd0d83d
-- CREACION DE PROCEDURESSS
IF OBJECT_ID('MIGRAR_PROVINCIAS', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PROVINCIAS;
GO
CREATE PROCEDURE MIGRAR_PROVINCIAS
AS
    BEGIN
        INSERT INTO NEW_MODEL.PROVINCIA(PROVINCIA_NOMBRE)
		(SELECT DISTINCT DIRECCION_USUARIO_PROVINCIA AS PROVINCIA_NOMBRE FROM gd_esquema.Maestra WHERE DIRECCION_USUARIO_PROVINCIA IS NOT NULL
		UNION
		SELECT DISTINCT ENVIO_MENSAJERIA_PROVINCIA AS PROVINCIA_NOMBRE FROM gd_esquema.Maestra WHERE ENVIO_MENSAJERIA_PROVINCIA IS NOT NULL
		UNION
		SELECT DISTINCT LOCAL_PROVINCIA AS PROVINCIA_NOMBRE FROM gd_esquema.Maestra  WHERE LOCAL_PROVINCIA IS NOT NULL
		)
        PRINT('PROVINCIAS MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_LOCALIDADES', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_LOCALIDADES;
GO
CREATE PROCEDURE MIGRAR_LOCALIDADES
AS
    BEGIN
        INSERT INTO NEW_MODEL.LOCALIDAD(LOCALIDAD_PRIVINCIA_NRO, LOCALIDAD_NOMBRE)
		SELECT DISTINCT dbo.obtenerProvincia(DIRECCION_USUARIO_PROVINCIA) AS LOCALIDAD_PROVINCIA_NRO, DIRECCION_USUARIO_LOCALIDAD AS LOCALIDAD_NOMBRE FROM gd_esquema.Maestra WHERE DIRECCION_USUARIO_LOCALIDAD IS NOT NULL
		UNION
		SELECT DISTINCT dbo.obtenerProvincia(ENVIO_MENSAJERIA_PROVINCIA) AS LOCALIDAD_PROVINCIA_NRO, ENVIO_MENSAJERIA_LOCALIDAD AS LOCALIDAD_NOMBRE FROM gd_esquema.Maestra WHERE ENVIO_MENSAJERIA_LOCALIDAD IS NOT NULL
		UNION
		SELECT DISTINCT dbo.obtenerProvincia(LOCAL_PROVINCIA), LOCAL_LOCALIDAD AS LOCALIDAD_NOMBRE FROM gd_esquema.Maestra WHERE LOCAL_LOCALIDAD IS NOT NULL;
        PRINT('LOCALIDADES MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_USUARIOS', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_USUARIOS;
GO
CREATE PROCEDURE MIGRAR_USUARIOS
AS
    BEGIN
        INSERT INTO NEW_MODEL.USUARIO(USUARIO_NOMBRE, USUARIO_APELLIDO, USUARIO_DNI, USUARIO_FECHA_REGISTRO, USUARIO_TELEFONO,USUARIO_MAIL, USUARIO_FECHA_NAC)
        SELECT DISTINCT USUARIO_NOMBRE, USUARIO_APELLIDO, USUARIO_DNI, USUARIO_FECHA_REGISTRO, USUARIO_TELEFONO,USUARIO_MAIL, USUARIO_FECHA_NAC
        FROM gd_esquema.Maestra
        PRINT('USUARIOS MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_TIPO_MOVILIDAD', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_TIPO_MOVILIDAD;
GO
CREATE PROCEDURE MIGRAR_TIPO_MOVILIDAD
AS
    BEGIN
        INSERT INTO NEW_MODEL.TIPO_MOVILIDAD(TIPO_MOVILIDAD_NOMBRE)
        SELECT DISTINCT REPARTIDOR_TIPO_MOVILIDAD
        FROM gd_esquema.Maestra
        PRINT('TIPO MOVILIDADES MIGRADAS')
    END
GO


IF OBJECT_ID('MIGRAR_REPARTIDOR', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_REPARTIDOR;
GO
CREATE PROCEDURE MIGRAR_REPARTIDOR
AS
    BEGIN
        INSERT INTO NEW_MODEL.REPARTIDOR(REPARTIDOR_TIPO_MOVILIDAD_NRO ,REPARTIDOR_NOMBRE , REPARTIDOR_APELLIDO ,REPARTIDOR_DNI,REPARTIDOR_TELEFONO, REPARTIDOR_DIRECCION ,REPARTIDOR_EMAIL ,REPARTIDOR_FECHA_NAC)
        SELECT DISTINCT dbo.obtenerTipoMovilidad(REPARTIDOR_TIPO_MOVILIDAD) AS REPARTIDOR_TIPO_MOVILIDAD_NRO ,REPARTIDOR_NOMBRE , REPARTIDOR_APELLIDO ,REPARTIDOR_DNI,REPARTIDOR_TELEFONO,REPARTIDOR_DIRECION AS REPARTIDOR_DIRECCION,REPARTIDOR_EMAIL ,REPARTIDOR_FECHA_NAC 
        FROM gd_esquema.Maestra
        PRINT('REPARTIDORES MIGRADAS')
    END
GO

IF OBJECT_ID('activarUltimaLocalidad', 'P') IS NOT NULL
    DROP PROCEDURE activarUltimalocalidad;
GO
CREATE PROCEDURE activarUltimalocalidad(@repartidorDni decimal(18,0))
AS
	BEGIN
		DECLARE @localidadNro int;
        DECLARE @repartidorNro int;
        SELECT TOP 1 @localidadNro = dbo.obtenerLocalidadNro(PROVINCIA, LOCALIDAD), @repartidorNro = dbo.obtenerRepartidorNro(REPARTIDOR_DNI) FROM
        ( 
            SELECT DISTINCT PEDIDO_NRO AS NRO_OP,LOCAL_PROVINCIA AS PROVINCIA, LOCAL_LOCALIDAD AS LOCALIDAD, REPARTIDOR_DNI, PEDIDO_FECHA AS FECHA FROM gd_esquema.Maestra WHERE PEDIDO_NRO IS NOT NULL
            UNION 
            SELECT DISTINCT ENVIO_MENSAJERIA_NRO AS NRO_OP, ENVIO_MENSAJERIA_PROVINCIA AS PROVINCIA, ENVIO_MENSAJERIA_LOCALIDAD AS LOCALIDAD, REPARTIDOR_DNI, ENVIO_MENSAJERIA_FECHA AS FECHA FROM gd_esquema.Maestra WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL
        ) T WHERE T.REPARTIDOR_DNI = @repartidorDni
        ORDER BY FECHA DESC

        UPDATE NEW_MODEL.ALTA
        SET ALTA_ACTIVA = 1
        WHERE ALTA_LOCALIDAD_NRO = @localidadNro AND ALTA_REPARTIDOR_NRO = @repartidorNro;
	END
GO


IF OBJECT_ID('MIGRAR_ALTA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_ALTA;
GO
CREATE PROCEDURE MIGRAR_ALTA
AS
	BEGIN
		INSERT INTO NEW_MODEL.ALTA(ALTA_LOCALIDAD_NRO,ALTA_REPARTIDOR_NRO)
            SELECT DISTINCT dbo.obtenerLocalidadNro(LOCAL_PROVINCIA,LOCAL_LOCALIDAD) AS ALTA_LOCALIDAD_NRO, dbo.obtenerRepartidorNro(REPARTIDOR_DNI) AS ALTA_REPARTIDOR_NRO FROM gd_esquema.Maestra WHERE PEDIDO_NRO IS NOT NULL
            UNION
            SELECT DISTINCT dbo.obtenerLocalidadNro(ENVIO_MENSAJERIA_PROVINCIA, ENVIO_MENSAJERIA_LOCALIDAD) AS ALTA_LOCALIDAD_NRO, dbo.obtenerRepartidorNro(REPARTIDOR_DNI) AS ALTA_REPARTIDOR_NRO FROM gd_esquema.Maestra WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL
        -- CADA SELECT DEL UNION ME ESTA DANDO LA COMBINACION DE DNI-LOCALIDAD POR DONDE ESTUVO EL REPARTIDOR, EL UNION ES PARA MEZCLAR LOS
        -- PEDIDOS CON LOS ENVIOS_MENSAJERIA, HABRIA QUE VER SI ESTO NO ME PRODUCE DUPLICADOS, ME PARECE QUE NO, PERO CREO QUE ESTA LA POSIBILIDAD
        -- NO SE SI HACIENDO UNS SELECT DISTINCT AL RESULTADO DE LA UNION LO ARREGLAMOS

        -- Ahora vamos a settear como activa su ultima aparicion en una localidad
        -- (Me gustria que ya tengamos los pedidos y envios en NEW.MODEL para no tener que recorrer la tabla maestra por cada DNI REPARTIDOR)
        -- (Quise hacerlo de forma que no sea necesaria llamar a una funcion en el select de arriba para ahorrar procesamiento y habria q comprar si es mejor usar este cursos o hacer la funcion)
            -- DECLARE @repartidorDni decimal(18,0);

            -- -- Cursor para recorrer los resultados de la consulta
            -- DECLARE cursorResultado CURSOR FOR
            -- SELECT DISTINCT
            --     REPARTIDOR_DNI
            -- FROM
            --     gd_esquema.Maestra
            -- OPEN cursorResultado;
            -- FETCH NEXT FROM cursorResultado INTO @repartidorDni;

            -- -- Llamar al procedimiento activarUltimalocalidad para cada resultado del cursor
            -- WHILE @@FETCH_STATUS = 0
            -- BEGIN
            --     EXEC activarUltimalocalidad @repartidorDni;

            --     FETCH NEXT FROM cursorResultado INTO @repartidorDni;
            -- END;

            -- CLOSE cursorResultado;
            -- DEALLOCATE cursorResultado;

            PRINT('ALTA MIGRADAS')
	END
GO

IF OBJECT_ID('MIGRAR_DIRECCION_USUARIO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_DIRECCION_USUARIO;
GO
CREATE PROCEDURE MIGRAR_DIRECCION_USUARIO 
AS
    BEGIN
        INSERT INTO NEW_MODEL.DIRECCION_USUARIO(DIRECCION_USUARIO_USUARIO_NRO,DIRECCION_USUARIO_LOCALIDAD_NRO,DIRECCION_USUARIO_NOMBRE,DIRECCION_USUARIO_DIRECCION)
 	    SELECT DISTINCT dbo.obtenerUsuarioNro(USUARIO_DNI),dbo.obtenerLocalidadNro(DIRECCION_USUARIO_PROVINCIA,DIRECCION_USUARIO_LOCALIDAD),DIRECCION_USUARIO_NOMBRE,DIRECCION_USUARIO_DIRECCION FROM gd_esquema.Maestra
 	    WHERE DIRECCION_USUARIO_DIRECCION IS NOT NULL
        PRINT('DIRECCIONES_USUARIO MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_TIPO_LOCAL', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_TIPO_LOCAL;
GO
CREATE PROCEDURE MIGRAR_TIPO_LOCAL 
AS
    BEGIN
        INSERT INTO NEW_MODEL.TIPO_LOCAL(TIPO_LOCAL_CATEGORIA_NRO, TIPO_LOCAL_NOMBRE)
        SELECT DISTINCT dbo.obtenerCategoriaNro(NULL) AS TIPO_LOCAL_CATEGORIA_NRO, LOCAL_TIPO AS TIPO_LOCAL_NOMBRE FROM gd_esquema.Maestra WHERE LOCAL_TIPO IS NOT NULL
        PRINT('TIPO_LOCAL MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_LOCAL', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_LOCAL;
GO
CREATE PROCEDURE MIGRAR_LOCAL 
AS
    BEGIN
        INSERT INTO NEW_MODEL.LOCAL(LOCAL_TIPO_LOCAL_NRO,LOCAL_LOCALIDAD_NRO,LOCAL_NOMBRE,LOCAL_DESCRIPCION,LOCAL_DIRECCION)
        SELECT DISTINCT dbo.obtenerTipoLocalNro(LOCAL_TIPO),dbo.obtenerLocalidadNro(LOCAL_PROVINCIA,LOCAL_LOCALIDAD), LOCAL_NOMBRE, LOCAL_DESCRIPCION, LOCAL_DIRECCION
        FROM gd_esquema.Maestra
        WHERE LOCAL_NOMBRE IS NOT NULL
        
        PRINT('LOCAL MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_DIA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_DIA;
GO
CREATE PROCEDURE MIGRAR_DIA 
AS
    BEGIN
        INSERT INTO NEW_MODEL.DIA(DIA_NOMBRE)
        SELECT DISTINCT HORARIO_LOCAL_DIA AS DIA_NOMBRE
        FROM gd_esquema.Maestra
        WHERE HORARIO_LOCAL_DIA IS NOT NULL

        PRINT('DIA MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_HORARIO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_HORARIO;
GO
CREATE PROCEDURE MIGRAR_HORARIO 
AS
    BEGIN
        INSERT INTO NEW_MODEL.HORARIO(HORARIO_LOCAL_NRO,HORARIO_DIA_NRO,HORARIO_LOCAL_HORA_APERTURA,HORARIO_LOCAL_HORA_CIERRE)
        SELECT DISTINCT dbo.obtenerLocalNro(LOCAL_NOMBRE,LOCAL_DIRECCION) AS HORARIO_LOCAL_NRO, dbo.obtenerDiaNro(HORARIO_LOCAL_DIA) AS HORARIO_LOCAL_DIA, HORARIO_LOCAL_HORA_APERTURA,HORARIO_LOCAL_HORA_CIERRE
        FROM gd_esquema.Maestra

        PRINT('HORARIO MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_PRODUCTO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PRODUCTO;
GO
CREATE PROCEDURE MIGRAR_PRODUCTO 
AS
    BEGIN
        INSERT INTO NEW_MODEL.PRODUCTO(PRODUCTO_CODIGO,PRODUCTO_NOMBRE,PRODUCTO_DESCRIPCION)
        SELECT DISTINCT PRODUCTO_LOCAL_CODIGO, PRODUCTO_LOCAL_NOMBRE, PRODUCTO_LOCAL_DESCRIPCION FROM gd_esquema.Maestra
        WHERE PRODUCTO_LOCAL_CODIGO IS NOT NULL

        PRINT('PRODUCTO MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_PEDIDO_ENVIO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PEDIDO_ENVIO;
GO
CREATE PROCEDURE MIGRAR_PEDIDO_ENVIO
AS
	BEGIN
		INSERT INTO NEW_MODEL.PEDIDO_ENVIO(PEDIDO_ENVIO_REPARTIDOR_NRO,PEDIDO_ENVIO_DIRECCION_USUARIO_NRO, PEDIDO_ENVIO_OBSERV, PEDIDO_ENVIO_FECHA, PEDIDO_ENVIO_FECHA_ENTREGA)
		SELECT DISTINCT dbo.obtenerRepartidorNro(REPARTIDOR_DNI),dbo.obtenerDireccionUsuarioNro(DIRECCION_USUARIO_NOMBRE,DIRECCION_USUARIO_DIRECCION), PEDIDO_OBSERV, PEDIDO_FECHA, PEDIDO_FECHA_ENTREGA FROM gd_esquema.Maestra
		WHERE PEDIDO_PRECIO_ENVIO IS NOT NULL

        PRINT('PEDIDO_ENVIO MIGRADAS')
	END
GO

<<<<<<< HEAD
IF OBJECT_ID('MIGRAR_PEDIDO_ESTADO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PEDIDO_ESTADO;
GO
CREATE PROCEDURE MIGRAR_PEDIDO_ESTADO 
AS
    BEGIN
        
        INSERT INTO NEW_MODEL.PEDIDO_ESTADO(PEDIDO_ESTADO)
        SELECT DISTINCT PEDIDO_ESTADO FROM gd_esquema.Maestra
        WHERE PEDIDO_ESTADO IS NOT NULL
        
        PRINT('PEDIDO_ESTADO MIGRADAS')
    END
=======
IF OBJECT_ID('MIGRAR_MENSAJERIA_ESTADO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_MENSAJERIA_ESTADO;
GO

CREATE PROCEDURE MIGRAR_MENSAJERIA_ESTADO AS
BEGIN
	
	INSERT INTO NEW_MODEL.MENSAJERIA_ESTADO(ENVIO_MENSAJERIA_ESTADO)
	SELECT DISTINCT ENVIO_MENSAJERIA_ESTADO FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_ESTADO IS NOT NULL
END
GO



IF OBJECT_ID('MIGRAR_TIPO_PAQUETE', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_TIPO_PAQUETE;
GO

CREATE PROCEDURE MIGRAR_TIPO_PAQUETE AS
BEGIN
	
	INSERT INTO NEW_MODEL.TIPO_PAQUETE(TIPO_PAQUETE_NOMBRE,PAQUETE_ALTO_MAX,PAQUETE_ANCHO_MAX,PAQUETE_LARGO_MAX,PAQUETE_PESO_MAX)
	SELECT DISTINCT PAQUETE_TIPO,PAQUETE_ALTO_MAX,PAQUETE_ANCHO_MAX,PAQUETE_LARGO_MAX,PAQUETE_PESO_MAX FROM gd_esquema.Maestra
	WHERE PAQUETE_TIPO IS NOT NULL
END
GO



IF OBJECT_ID('MIGRAR_PAQUETE', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PAQUETE;
GO

CREATE PROCEDURE MIGRAR_PAQUETE AS
BEGIN
	
	INSERT INTO NEW_MODEL.PAQUETE(PAQUETE_TIPO_PAQUETE_NRO,TIPO_PAQUETE_PRECIO)
	SELECT DISTINCT dbo.obtenerPaqueteNro(PAQUETE_TIPO),PAQUETE_TIPO_PRECIO FROM gd_esquema.Maestra
	WHERE PAQUETE_TIPO_PRECIO IS NOT NULL
END
GO


IF OBJECT_ID('MIGRAR_ENVIO_MENSAJERIA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_ENVIO_MENSAJERIA;
GO


CREATE PROCEDURE MIGRAR_ENVIO_MENSAJERIA AS
BEGIN
	
	INSERT INTO NEW_MODEL.ENVIO_MENSAJERIA(ENVIO_MENSAJERIA_LOCALIDAD_NRO,ENVIO_MENSAJERIA_DIR_ORIG,ENVIO_MENSAJERIA_DIR_DEST,ENVIO_MENSAJERIA_TIEMPO_ESTIMADO,ENVIO_MENSAJERIA_KM,ENVIO_MENSAJERIA_PRECIO_ENVIO,ENVIO_MENSAJERIA_PROPINA)
	SELECT DISTINCT dbo.obtenerLocalidadMensajeriaNro(ENVIO_MENSAJERIA_LOCALIDAD), ENVIO_MENSAJERIA_DIR_ORIG,ENVIO_MENSAJERIA_DIR_DEST, ENVIO_MENSAJERIA_TIEMPO_ESTIMADO, ENVIO_MENSAJERIA_KM, ENVIO_MENSAJERIA_PRECIO_ENVIO, ENVIO_MENSAJERIA_PROPINA FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_TIEMPO_ESTIMADO IS NOT NULL
END
GO

IF OBJECT_ID('MIGRAR_MEDIO_PAGO_TIPO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_MEDIO_PAGO_TIPO;
GO

CREATE PROCEDURE MIGRAR_MEDIO_PAGO_TIPO AS
BEGIN
	
	INSERT INTO NEW_MODEL.MEDIO_PAGO_TIPO(MEDIO_PAGO_TIPO)
	SELECT DISTINCT MEDIO_PAGO_TIPO FROM gd_esquema.Maestra
	WHERE MEDIO_PAGO_TIPO IS NOT NULL
END
>>>>>>> a1fc2fe089e4f693901fdcfe1f53a8199dd0d83d
GO

IF OBJECT_ID('MIGRAR_MEDIO_PAGO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_MEDIO_PAGO;
GO
<<<<<<< HEAD
CREATE PROCEDURE MIGRAR_MEDIO_PAGO AS
BEGIN
	INSERT INTO NEW_MODEL.MEDIO_PAGO(MEDIO_PAGO)
	SELECT DISTINCT MEDIO_PAGO_TIPO FROM gd_esquema.Maestra
	WHERE MEDIO_PAGO_TIPO IS NOT NULL

    PRINT('MEDIO_PAGO MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_MARCA_TARJETA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_MARCA_TARJETA;
GO
CREATE PROCEDURE MIGRAR_MARCA_TARJETA AS
BEGIN
	INSERT INTO NEW_MODEL.MARCA_TARJETA(MARCA_TARJETA)
	SELECT DISTINCT MARCA_TARJETA FROM gd_esquema.Maestra
	WHERE MARCA_TARJETA IS NOT NULL

    PRINT('MARCA_TARJETA MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_TARJETA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_TARJETA;
GO
CREATE PROCEDURE MIGRAR_TARJETA AS
BEGIN
	INSERT INTO NEW_MODEL.TARJETA(TARJETA_USUARIO_NRO, TARJETA_MARCA_NRO,TARJETA)
    SELECT DISTINCT dbo.obtenerUsuarioNro(USUARIO_DNI),dbo.obtenerMarcaTarjetaNro(MARCA_TARJETA), MEDIO_PAGO_NRO_TARJETA FROM gd_esquema.Maestra

    PRINT('TARJETA MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_PEDIDO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PEDIDO;
GO
CREATE PROCEDURE MIGRAR_PEDIDO 
AS
    BEGIN
            INSERT INTO NEW_MODEL.PEDIDO(PEDIDO_NRO, PEDIDO_ENVIO_NRO, PEDIDO_ESTADO_NRO, PEDIDO_USUARIO_NRO, PEDIDO_TOTAL_CUPONES, PEDIDO_TOTAL_SERVICIO, PEDIDO_TOTAL_PRODUCTOS, PEDIDO_CALIFICACION, PEDIDO_TIEMPO_ESTIMADO)
            SELECT DISTINCT PEDIDO_NRO, dbo.obtenerPedidoEnvioNro(dbo.obtenerRepartidorNro(REPARTIDOR_DNI), CONVERT(datetime, PEDIDO_FECHA, 121)), dbo.obtenerPedidoEstadoNro(PEDIDO_ESTADO), dbo.obtenerUsuarioNro(USUARIO_DNI), PEDIDO_TOTAL_CUPONES, PEDIDO_TOTAL_SERVICIO, PEDIDO_TOTAL_PRODUCTOS, PEDIDO_CALIFICACION , PEDIDO_TIEMPO_ESTIMADO_ENTREGA FROM gd_esquema.Maestra
            WHERE PEDIDO_NRO IS NOT NULL

            SELECT DISTINCT PEDIDO_NRO, (REPARTIDOR_DNI), PEDIDO_FECHA, PEDIDO_ESTADO, (USUARIO_DNI), PEDIDO_TOTAL_CUPONES, PEDIDO_TOTAL_SERVICIO, PEDIDO_TOTAL_PRODUCTOS, PEDIDO_CALIFICACION , PEDIDO_TIEMPO_ESTIMADO_ENTREGA FROM gd_esquema.Maestra
            WHERE PEDIDO_NRO IS NOT NULL
    
    END
GO

IF OBJECT_ID('MIGRAR_PAGO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PAGO;
GO
CREATE PROCEDURE MIGRAR_PAGO AS
BEGIN
	INSERT INTO NEW_MODEL.PAGO(PAGO_PEDIDO_NRO, PAGO_MENSAJERIA_NRO, PAGO_MEDIO_PAGO_NRO, PAGO_TARJETA_NRO)
     SELECT DISTINCT
            PEDIDO_NRO,
            NULL,
            dbo.obtenerMedioPagoTipoNro(MEDIO_PAGO_TIPO),
        CASE
            WHEN MEDIO_PAGO_TIPO = 'Efectivo' THEN NULL
            ELSE dbo.obtenerTarjetaNro(dbo.obtenerMarcaTarjetaNro(MARCA_TARJETA),MEDIO_PAGO_NRO_TARJETA)
        END
        FROM gd_esquema.Maestra
    UNION
    SELECT DISTINCT
            ENVIO_MENSAJERIA_NRO,
            NULL,
            dbo.obtenerMedioPagoTipoNro(MEDIO_PAGO_TIPO),
        CASE
            WHEN MEDIO_PAGO_TIPO = 'Efectivo' THEN NULL
            ELSE dbo.obtenerTarjetaNro(dbo.obtenerMarcaTarjetaNro(MARCA_TARJETA),MEDIO_PAGO_NRO_TARJETA)
        END
        FROM gd_esquema.Maestra

    -- FROM (
    --     SELECT DISTINCT
    --         PEDIDO_NRO, 
    --         MEDIO_PAGO_TIPO,
    --         MARCA_TARJETA,
    --         MEDIO_PAGO_NRO_TARJETA
    --     FROM gd_esquema.Maestra WHERE PEDIDO_NRO IS NOT NULL
    --     UNION
    --     SELECT DISTINCT 
    --         ENVIO_MENSAJERIA_NRO, 
    --         MEDIO_PAGO_TIPO, 
    --         MARCA_TARJETA, 
    --         MEDIO_PAGO_NRO_TARJETA
    --     FROM gd_esquema.Maestra WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL
    --  ) PAGOS
        PRINT('PAGO MIGRADAS')
END
GO
=======

CREATE PROCEDURE MIGRAR_MEDIO_PAGO AS
BEGIN
	INSERT INTO NEW_MODEL.MEDIO_PAGO(MEDIO_PAGO_USUARIO_NRO,MEDIO_PAGO_TIPO_NRO,MEDIO_PAGO_NRO_TARJETA,MEDIO_PAGO_MARCA_TARJETA)
	SELECT DISTINCT dbo.obtenerUsuarioNro(USUARIO_DNI),dbo.obtenerPagoTipo(MEDIO_PAGO_TIPO),MEDIO_PAGO_NRO_TARJETA, MARCA_TARJETA FROM gd_esquema.Maestra
	WHERE MEDIO_PAGO_NRO_TARJETA IS NOT NULL
END
GO

IF OBJECT_ID('MIGRAR_MENSAJERIA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_MENSAJERIA;
GO

CREATE PROCEDURE MIGRAR_MENSAJERIA AS
BEGIN
	
	INSERT INTO NEW_MODEL.MENSAJERIA(MENSAJERIA_USUARIO_NRO,MENSAJERIA_REPARTIDOR_NRO,MENSAJERIA_MEDIO_PAGO_NRO,MENSAJERIA_PAQUETE_NRO,MENSAJERIA_ENVIO_NRO,MENSAJERIA_ESTADO_NRO,MENSAJERIA_TOTAL,MENSAJERIA_OBSERV,MENSAJERIA_FECHA ,MENSAJERIA_FECHA_ENTREGA ,MENSAJERIA_VALOR_ASEGURADO ,MENSAJERIA_CALIFICACION,MENSAJERIA_PRECIO_SEGURO)
	SELECT DISTINCT dbo.obtenerUsuarioNro(USUARIO_DNI),dbo.obtenerRepartidorNro(REPARTIDOR_DNI),dbo.obtenerMedioDePago(MEDIO_PAGO_TIPO),dbo.obtenerPaqueteNro(PAQUETE_TIPO),dbo.obtenerMensajeriaNumero(ENVIO_MENSAJERIA_DIR_DEST,PEDIDO_TIEMPO_ESTIMADO_ENTREGA,ENVIO_MENSAJERIA_PRECIO_ENVIO),dbo.obtenerEstadoNro(ENVIO_MENSAJERIA_ESTADO),ENVIO_MENSAJERIA_TOTAL,ENVIO_MENSAJERIA_OBSERV,ENVIO_MENSAJERIA_FECHA ,ENVIO_MENSAJERIA_FECHA_ENTREGA ,ENVIO_MENSAJERIA_VALOR_ASEGURADO ,ENVIO_MENSAJERIA_CALIFICACION,ENVIO_MENSAJERIA_PRECIO_SEGURO
 FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL
END
GO


IF OBJECT_ID('MIGRAR_TIPO_RECLAMO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_TIPO_RECLAMO;
GO

CREATE PROCEDURE MIGRAR_TIPO_RECLAMO AS
BEGIN
	INSERT INTO NEW_MODEL.TIPO_RECLAMO(TIPO_RECLAMO_NOMBRE)
	SELECT DISTINCT RECLAMO_TIPO FROM gd_esquema.Maestra
	WHERE RECLAMO_TIPO IS NOT NULL
END
GO



IF OBJECT_ID('MIGRAR_ESTADO_RECLAMO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_ESTADO_RECLAMO;
GO

CREATE PROCEDURE MIGRAR_ESTADO_RECLAMO AS
BEGIN

	INSERT INTO NEW_MODEL.ESTADO_RECLAMO(ESTADO_RECLAMO_NOMBRE)
	SELECT DISTINCT RECLAMO_ESTADO FROM gd_esquema.Maestra
	WHERE RECLAMO_ESTADO IS NOT NULL
END
GO


IF OBJECT_ID('MIGRAR_OPERADOR', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_OPERADOR;
GO

CREATE PROCEDURE MIGRAR_OPERADOR AS
BEGIN
	INSERT INTO NEW_MODEL.OPERADOR(OPERADOR_RECLAMO_NOMBRE ,OPERADOR_RECLAMO_APELLIDO ,OPERADOR_RECLAMO_DNI_NUMERO ,OPERADOR_RECLAMO_TELEFONO ,OPERADOR_RECLAMO_DIRECCION ,OPERADOR_RECLAMO_MAIL ,OPERADOR_RECLAMO_FECHA_NAC)
	SELECT DISTINCT OPERADOR_RECLAMO_NOMBRE ,OPERADOR_RECLAMO_APELLIDO ,OPERADOR_RECLAMO_DNI ,OPERADOR_RECLAMO_TELEFONO ,OPERADOR_RECLAMO_DIRECCION ,OPERADOR_RECLAMO_MAIL ,OPERADOR_RECLAMO_FECHA_NAC FROM gd_esquema.Maestra
	WHERE OPERADOR_RECLAMO_DNI IS NOT NULL
END
GO
 

IF OBJECT_ID('MIGRAR_CUPON_TIPO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_CUPON_TIPO;
GO

CREATE PROCEDURE MIGRAR_CUPON_TIPO AS
BEGIN
	INSERT INTO NEW_MODEL.CUPON_TIPO(CUPON_TIPO_NOMBRE)
	SELECT DISTINCT CUPON_TIPO FROM gd_esquema.Maestra
	WHERE CUPON_TIPO IS NOT NULL
END
GO


IF OBJECT_ID('MIGRAR_CUPON', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_CUPON;
GO

CREATE PROCEDURE MIGRAR_CUPON AS
BEGIN
	SET IDENTITY_INSERT NEW_MODEL.CUPON ON
	INSERT INTO NEW_MODEL.CUPON(CUPON_NRO,CUPON_USUARIO_NRO,CUPON_PEDIDO_NRO,CUPON_TIPO_NRO,CUPON_MONTO,CUPON_FECHA_ALTA,CUPON_FECHA_VENCIMIENTO)
	SELECT DISTINCT CUPON_NRO,dbo.obtenerUsuarioNro(USUARIO_DNI),PEDIDO_NRO,dbo.obtenerCuponTipoNro(CUPON_TIPO),CUPON_MONTO,CUPON_FECHA_ALTA,CUPON_FECHA_VENCIMIENTO FROM gd_esquema.Maestra
	WHERE CUPON_NRO IS NOT NULL
	SET IDENTITY_INSERT NEW_MODEL.CUPON OFF 
END
GO


IF OBJECT_ID('MIGRAR_RECLAMO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_RECLAMO;
GO

CREATE PROCEDURE MIGRAR_RECLAMO AS
BEGIN
	INSERT INTO NEW_MODEL.RECLAMO(RECLAMO_NRO,RECLAMO_USUARIO_NRO,RECLAMO_PEDIDO_NRO,RECLAMO_TIPO_RECLAMO_NRO,RECLAMO_ESTADO_RECLAMO_NRO,RECLAMO_OPERADOR_NRO,RECLAMO_FECHA,RECLAMO_DESCRIPCION,RECLAMO_FECHA_SOLUCION ,RECLAMO_SOLUCION,RECLAMO_CALIFICACION)
	SELECT DISTINCT RECLAMO_NRO,dbo.obtenerUsuarioNro(USUARIO_DNI),PEDIDO_NRO,dbo.obtenerTipoReclamo(RECLAMO_TIPO),dbo.obtenerEstadoReclamo(RECLAMO_ESTADO),dbo.obtenerOperadorNro(OPERADOR_RECLAMO_DNI),RECLAMO_FECHA,RECLAMO_DESCRIPCION,RECLAMO_FECHA_SOLUCION ,RECLAMO_SOLUCION,RECLAMO_CALIFICACION  FROM gd_esquema.Maestra
	WHERE RECLAMO_NRO IS NOT NULL
END
GO


IF OBJECT_ID('MIGRAR_CUPON_RECLAMO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_CUPON_RECLAMO;
GO

CREATE PROCEDURE MIGRAR_CUPON_RECLAMO AS
BEGIN
	INSERT INTO NEW_MODEL.CUPON_RECLAMO(CUPON_RECLAMO_CUPON_NRO,CUPON_RECLAMO_RECLAMO_NRO)
	SELECT DISTINCT  dbo.obtenerCuponNro(PEDIDO_NRO),dbo.obtenerReclamoNro(PEDIDO_NRO) FROM gd_esquema.Maestra 
	WHERE PEDIDO_NRO IS NOT NULL
END
GO

-----------------------------------------------------------------------ZONA DE TESTEO DE SANTI, NO ME BORRES PLS----------------------------------------------------------------------------------------------
--select * from NEW_MODEL.MENSAJERIA;
--exec borrar_todo;
--exec crear_tablas;
--exec migrar_tablas;
--select * from new_model.MENSAJERIA_ESTADO ;
--select REPARTIDOR_NRO, REPARTIDOR_DNI from NEW_MODEL.REPARTIDOR order by REPARTIDOR_NRO;
--select PEDIDO_NRO from NEW_MODEL.PEDIDO;
--SELECT * FROM NEW_MODEL.MEDIO_PAGO_TIPO
--exec MIGRAR_OPERADOR;
--EXEC MIGRAR_CUPON_RECLAMO;
--DROP FUNCTION obtenerCuponNro
--DROP FUNCTION obtenerReclamoNro

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- IF OBJECT_ID('MIGRAR_PEDIDO', 'P') IS NOT NULL
--     DROP PROCEDURE MIGRAR_PEDIDO;
-- GO
-- CREATE PROCEDURE MIGRAR_PEDIDO 
-- AS
--     BEGIN
--         INSERT INTO NEW_MODEL.PEDIDO(PEDIDO_TOTAL_CUPONES , PEDIDO_TOTAL_SERVICIO, PEDIDO_OBSERV ,PEDIDO_FECHA ,PEDIDO_FECHA_ENTREGA, PEDIDO_CALIFICACION, PEDIDO_TOTAL_PRODUCTO)
--             SELECT PEDIDO_NRO,PEDIDO_TOTAL_CUPONES,PEDIDO_OBSERV,PEDIDO_FECHA,PEDIDO_FECHA_ENTREGA,PEDIDO_TIEMPO_ESTIMADO_ENTREGA,PEDIDO,PEDIDO_TOTAL_SERVICIO,PEDIDO_TOTAL_PRODUCTOS  FROM gd_esquema.Maestra
--             WHERE PEDIDO_NRO IS NOT NULL
--     END
-- GO
>>>>>>> a1fc2fe089e4f693901fdcfe1f53a8199dd0d83d



IF OBJECT_ID('MIGRAR_LOCAL_PRODUCTO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_LOCAL_PRODUCTO;
GO
CREATE PROCEDURE MIGRAR_LOCAL_PRODUCTO
AS
	BEGIN
		INSERT INTO NEW_MODEL.LOCAL_PRODUCTO(LOCAL_PRODUCTO_LOCAL_NRO,LOCAL_PRODUCTO_PRODUCTO_NRO)
		SELECT DISTINCT dbo.obtenerLocalNro(LOCAL_NOMBRE, LOCAL_DIRECCION) AS LOCAL_PRODUCTO_LOCAL_NRO, dbo.obtenerProductoNro(PRODUCTO_LOCAL_CODIGO) AS LOCAL_PRODUCTO_PRODUCTO_NRO FROM gd_esquema.Maestra where PRODUCTO_LOCAL_CODIGO IS NOT NULL ORDER BY LOCAL_PRODUCTO_LOCAL_NRO

        PRINT('LOCAL_PRODUCTO MIGRADAS')
	END
GO
 -- MIGRACION 
IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'migrar_tablas')
DROP PROCEDURE migrar_tablas
GO
CREATE PROCEDURE migrar_tablas
AS BEGIN
BEGIN TRANSACTION
BEGIN TRY
EXEC MIGRAR_PROVINCIAS;
EXEC MIGRAR_LOCALIDADES;
EXEC MIGRAR_USUARIOS;
EXEC MIGRAR_TIPO_MOVILIDAD;
EXEC MIGRAR_REPARTIDOR;
-- EXEC MIGRAR_ALTA;
EXEC MIGRAR_DIRECCION_USUARIO;
EXEC MIGRAR_TIPO_LOCAL;
EXEC MIGRAR_LOCAL;
EXEC MIGRAR_DIA;
EXEC MIGRAR_HORARIO;
EXEC MIGRAR_PRODUCTO;
EXEC MIGRAR_PEDIDO_ENVIO;
<<<<<<< HEAD
EXEC MIGRAR_PEDIDO_ESTADO
-- EXEC MIGRAR_PEDIDO;
EXEC MIGRAR_MARCA_TARJETA;
EXEC MIGRAR_TARJETA;
EXEC MIGRAR_MEDIO_PAGO;
-- EXEC MIGRAR_PAGO;
-- EXEC MIGRAR_LOCAL_PRODUCTO;
=======
EXEC MIGRAR_LOCAL_PRODUCTO;
EXEC MIGRAR_MENSAJERIA_ESTADO;
EXEC MIGRAR_TIPO_PAQUETE;
EXEC MIGRAR_PAQUETE;
EXEC MIGRAR_ENVIO_MENSAJERIA;
EXEC MIGRAR_MEDIO_PAGO_TIPO;
EXEC MIGRAR_MEDIO_PAGO;
EXEC MIGRAR_MENSAJERIA;
EXEC MIGRAR_TIPO_RECLAMO;
EXEC MIGRAR_ESTADO_RECLAMO;
EXEC MIGRAR_OPERADOR;
EXEC MIGRAR_CUPON_TIPO;
EXEC MIGRAR_CUPON;
EXEC MIGRAR_RECLAMO;
EXEC MIGRAR_CUPON_RECLAMO;
>>>>>>> a1fc2fe089e4f693901fdcfe1f53a8199dd0d83d

PRINT 'Tablas migradas correctamente.';
COMMIT TRANSACTION
END TRY
BEGIN CATCH
ROLLBACK TRANSACTION;
THROW 50001, 'No se migraron las tablas',1;
END CATCH
END
GO
--select distinct REPARTIDOR_DNI from gd_esquema.Maestra where REPARTIDOR_EMAIL = 'doyeljara@gmail.com';
-- BORRAR TODO
IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'borrar_todo')
DROP PROCEDURE borrar_todo
GO
CREATE PROCEDURE borrar_todo
AS BEGIN

EXEC dropear_tablas

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_PROVINCIAS')
DROP PROCEDURE MIGRAR_PROVINCIAS

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_LOCALIDADES')
DROP PROCEDURE MIGRAR_LOCALIDADES

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TIPO_MOVILIDAD')
DROP PROCEDURE MIGRAR_TIPO_MOVILIDAD

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_REPARTIDOR')
DROP PROCEDURE MIGRAR_REPARTIDOR

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_DIRECCION_USUARIO')
DROP PROCEDURE MIGRAR_DIRECCION_USUARIO
    
IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'MIGRAR_LOCALIDADES')
DROP PROCEDURE MIGRAR_LOCALIDADES

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_USUARIOS')
DROP PROCEDURE MIGRAR_USUARIOS

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TIPO_MOVILIDAD')
DROP PROCEDURE MIGRAR_TIPO_MOVILIDAD

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_REPARTIDOR')
DROP PROCEDURE MIGRAR_REPARTIDOR

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TIPO_LOCAL')
DROP PROCEDURE MIGRAR_TIPO_LOCAL

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_LOCAL')
DROP PROCEDURE MIGRAR_LOCAL

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_DIA')
DROP PROCEDURE MIGRAR_DIA

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_HORARIO')
DROP PROCEDURE MIGRAR_HORARIO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_PRODUCTO')
DROP PROCEDURE MIGRAR_PRODUCTO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_PEDIDO_ENVIO')
DROP PROCEDURE MIGRAR_PEDIDO_ENVIO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_PEDIDO_ESTADO')
DROP PROCEDURE MIGRAR_PEDIDO_ESTADO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_PEDIDO')
DROP PROCEDURE MIGRAR_PEDIDO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_LOCAL_PRODUCTO')
DROP PROCEDURE MIGRAR_LOCAL_PRODUCTO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_MENSAJERIA_ESTADO')
DROP PROCEDURE MIGRAR_MENSAJERIA_ESTADO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TIPO_PAQUETE')
DROP PROCEDURE MIGRAR_TIPO_PAQUETE

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_PAQUETE')
DROP PROCEDURE MIGRAR_PAQUETE

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'activarUltimaLocalidad')
DROP PROCEDURE activarUltimaLocalidad

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_ALTA')
DROP PROCEDURE MIGRAR_ALTA

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_ALTA')
DROP PROCEDURE MIGRAR_ALTA

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_PEDIDO_ESTADO')
DROP PROCEDURE MIGRAR_PEDIDO_ESTADO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_PEDIDO_ESTADO')
DROP PROCEDURE MIGRAR_PEDIDO_ESTADO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_MEDIO_PAGO')
DROP PROCEDURE MIGRAR_MEDIO_PAGO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_MARCA_TARJETA')
DROP PROCEDURE MIGRAR_MARCA_TARJETA

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TARJETA')
DROP PROCEDURE MIGRAR_TARJETA

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_PAGO')
DROP PROCEDURE MIGRAR_PAGO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'crear_tablas')
DROP PROCEDURE crear_tablas

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'migrar_tablas')
DROP PROCEDURE migrar_tablas

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'dropear_tablas')
DROP PROCEDURE dropear_tablas

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'borrar_todo')
DROP PROCEDURE borrar_todo

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerProvincia')
DROP FUNCTION obtenerProvincia

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerLocalidadNro')
DROP FUNCTION obtenerLocalidadNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerProvincia')
DROP FUNCTION obtenerProvincia

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerTipoMovilidad')
DROP FUNCTION obtenerTipoMovilidad
    
IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerUsuarioNro')
DROP FUNCTION obtenerUsuarioNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerCategoriaNro')
DROP FUNCTION obtenerCategoriaNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerTipoLocalNro')
DROP FUNCTION obtenerTipoLocalNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerLocalNro')
DROP FUNCTION obtenerLocalNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerDiaNro')
DROP FUNCTION obtenerDiaNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerRepartidorNro')
DROP FUNCTION obtenerRepartidorNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerDireccionUsuarioNro')
DROP FUNCTION obtenerDireccionUsuarioNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerProductoNro')
DROP FUNCTION obtenerProductoNro

<<<<<<< HEAD
IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerPedidoEstadoNro')
DROP FUNCTION obtenerPedidoEstadoNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerMedioPagoTipoNro')
DROP FUNCTION obtenerMedioPagoTipoNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerPedidoEnvioNro')
DROP FUNCTION obtenerPedidoEnvioNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerMarcaTarjetaNro')
DROP FUNCTION obtenerMarcaTarjetaNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerTarjetaNro')
DROP FUNCTION obtenerTarjetaNro
=======
IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerPaqueteNro')
DROP FUNCTION obtenerPaqueteNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'LocalidadMensajeriaNro')
DROP FUNCTION LocalidadMensajeriaNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerPagoTipo')
DROP FUNCTION obtenerPagoTipo

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerMedioDePago')
DROP FUNCTION obtenerMedioDePago

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerMensajeriaNumero')
DROP FUNCTION obtenerMensajeriaNumero

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerEstadoNro')
DROP FUNCTION obtenerEstadoNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerReclamoNro')
DROP FUNCTION obtenerReclamoNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerCuponNro')
DROP FUNCTION obtenerCuponNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerTipoReclamo')
DROP FUNCTION obtenerTipoReclamo

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerEstadoReclamo')
DROP FUNCTION obtenerEstadoReclamo

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerOperadorNro')
DROP FUNCTION obtenerOperadorNro

IF EXISTS(SELECT [name] FROM sys.all_objects WHERE [name] = 'obtenerCuponTipoNro')
DROP FUNCTION obtenerCuponTipoNro
>>>>>>> a1fc2fe089e4f693901fdcfe1f53a8199dd0d83d



PRINT ('TABLAS FUNCIONES Y PROCEDURES ELIMINADOS')
END
GO


